//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   float4 options;                    // Offset:    0 Size:    16 [unused]
//   float4 z_buffer_parameteres;       // Offset:   16 Size:    16 [unused]
//   float4 camera_position;            // Offset:   32 Size:    16 [unused]
//   float4 camera_direction;           // Offset:   48 Size:    16 [unused]
//   float4 camera_clip_distance;       // Offset:   64 Size:    16 [unused]
//   float4 viewport_size;              // Offset:   80 Size:    16 [unused]
//   row_major float4x4 view_transform; // Offset:   96 Size:    64 [unused]
//   row_major float4x4 projection_transform;// Offset:  160 Size:    64 [unused]
//   row_major float4x4 view_projection_transform;// Offset:  224 Size:    64
//   row_major float4x4 inverse_view_transform;// Offset:  288 Size:    64 [unused]
//   row_major float4x4 inverse_projection_transform;// Offset:  352 Size:    64 [unused]
//   row_major float4x4 inverse_view_projection_transform;// Offset:  416 Size:    64 [unused]
//   row_major float4x4 previous_view_projection_transform;// Offset:  480 Size:    64
//
// }
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   row_major float4x4 previous_world; // Offset:   64 Size:    64
//   float material;                    // Offset:  128 Size:     4 [unused]
//   float has_tangent;                 // Offset:  132 Size:     4 [unused]
//   float skin;                        // Offset:  136 Size:     4 [unused]
//   float adjustalpha;                 // Offset:  140 Size:     4 [unused]
//
// }
//
// cbuffer PRIMITIVE_JOINT_CONSTANTS
// {
//
//   row_major float4x4 joint_matrices[512];// Offset:    0 Size: 32768
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// PRIMITIVE_JOINT_CONSTANTS         cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// JOINTS                   0   xyzw        4     NONE    uint   xyzw
// WEIGHTS                  0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// TEXCOORD                 1   xyz         5     NONE   float   xyz 
// CLIP_POSITION            0   xyzw        6     NONE   float   xyzw
// CLIP_POSITION            1   xyzw        7     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[34], immediateIndexed
dcl_constantbuffer CB0[8], immediateIndexed
dcl_constantbuffer CB2[2048], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 10
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.texcoord.x; v3.y <- vin.texcoord.y; 
//   v4.x <- vin.joints.x; v4.y <- vin.joints.y; v4.z <- vin.joints.z; v4.w <- vin.joints.w; 
//   v5.x <- vin.weights.x; v5.y <- vin.weights.y; v5.z <- vin.weights.z; v5.w <- vin.weights.w; 
//   o7.x <- <main return value>.previous_clip_position.x; o7.y <- <main return value>.previous_clip_position.y; o7.z <- <main return value>.previous_clip_position.z; o7.w <- <main return value>.previous_clip_position.w; 
//   o6.x <- <main return value>.current_clip_position.x; o6.y <- <main return value>.current_clip_position.y; o6.z <- <main return value>.current_clip_position.z; o6.w <- <main return value>.current_clip_position.w; 
//   o5.x <- <main return value>.shadow_texcoord.x; o5.y <- <main return value>.shadow_texcoord.y; o5.z <- <main return value>.shadow_texcoord.z; 
//   o4.x <- <main return value>.texcoord.x; o4.y <- <main return value>.texcoord.y; 
//   o3.x <- <main return value>.w_tangent.x; o3.y <- <main return value>.w_tangent.y; o3.z <- <main return value>.w_tangent.z; o3.w <- <main return value>.w_tangent.w; 
//   o2.x <- <main return value>.w_normal.x; o2.y <- <main return value>.w_normal.y; o2.z <- <main return value>.w_normal.z; o2.w <- <main return value>.w_normal.w; 
//   o1.x <- <main return value>.w_position.x; o1.y <- <main return value>.w_position.y; o1.z <- <main return value>.w_position.z; o1.w <- <main return value>.w_position.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 29 "D:\ライブラリ\3dgame\HLSL\gltf\gltf_model_gbuffer_vs.hlsl"
mov r0.x, v2.w  // r0.x <- sigma

#line 44
nop 
mov r1.xyzw, v0.xyzw

#line 5
itof r2.xyzw, l(0, 0, 0, 0)  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z; r2.w <- p.w

#line 10
imul null, r0.y, v4.x, l(4)
mul r3.xyzw, r1.xxxx, cb2[r0.y + 0].xyzw
mul r4.xyzw, r1.yyyy, cb2[r0.y + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r1.zzzz, cb2[r0.y + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r1.wwww, cb2[r0.y + 3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r3.xyzw, r3.xyzw, v5.xxxx
add r2.xyzw, r2.xyzw, r3.xyzw
imul null, r0.y, v4.y, l(4)
mul r3.xyzw, r1.xxxx, cb2[r0.y + 0].xyzw
mul r4.xyzw, r1.yyyy, cb2[r0.y + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r1.zzzz, cb2[r0.y + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r1.wwww, cb2[r0.y + 3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r3.xyzw, r3.xyzw, v5.yyyy
add r2.xyzw, r2.xyzw, r3.xyzw
imul null, r0.y, v4.z, l(4)
mul r3.xyzw, r1.xxxx, cb2[r0.y + 0].xyzw
mul r4.xyzw, r1.yyyy, cb2[r0.y + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r1.zzzz, cb2[r0.y + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r1.wwww, cb2[r0.y + 3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r3.xyzw, r3.xyzw, v5.zzzz
add r2.xyzw, r2.xyzw, r3.xyzw
imul null, r0.y, v4.w, l(4)
mul r3.xyzw, r1.xxxx, cb2[r0.y + 0].xyzw
mul r4.xyzw, r1.yyyy, cb2[r0.y + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r1.zzzz, cb2[r0.y + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r1.xyzw, r1.wwww, cb2[r0.y + 3].xyzw
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, v5.wwww
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- p.x; r1.y <- p.y; r1.z <- p.z; r1.w <- p.w

#line 12
mov r1.xyzw, r1.xyzw  // r1.x <- <SkinningPosition return value>.x; r1.y <- <SkinningPosition return value>.y; r1.z <- <SkinningPosition return value>.z; r1.w <- <SkinningPosition return value>.w

#line 44
mov r1.xyzw, r1.xyzw  // r1.x <- position.x; r1.y <- position.y; r1.z <- position.z; r1.w <- position.w

#line 45
nop 
mov r2.xyzw, v1.xyzw

#line 17
itof r0.yzw, l(0, 0, 0, 0)  // r0.y <- v.x; r0.z <- v.y; r0.w <- v.z

#line 22
imul null, r3.x, v4.x, l(4)
dp4 r4.x, cb2[r3.x + 0].xyzw, r2.xyzw
dp4 r4.y, cb2[r3.x + 1].xyzw, r2.xyzw
dp4 r4.z, cb2[r3.x + 2].xyzw, r2.xyzw
mul r3.xyz, r4.xyzx, v5.xxxx
add r0.yzw, r0.yyzw, r3.xxyz
imul null, r3.x, v4.y, l(4)
dp4 r4.x, cb2[r3.x + 0].xyzw, r2.xyzw
dp4 r4.y, cb2[r3.x + 1].xyzw, r2.xyzw
dp4 r4.z, cb2[r3.x + 2].xyzw, r2.xyzw
mul r3.xyz, r4.xyzx, v5.yyyy
add r0.yzw, r0.yyzw, r3.xxyz
imul null, r3.x, v4.z, l(4)
dp4 r4.x, cb2[r3.x + 0].xyzw, r2.xyzw
dp4 r4.y, cb2[r3.x + 1].xyzw, r2.xyzw
dp4 r4.z, cb2[r3.x + 2].xyzw, r2.xyzw
mul r3.xyz, r4.xyzx, v5.zzzz
add r0.yzw, r0.yyzw, r3.xxyz
imul null, r3.x, v4.w, l(4)
dp4 r4.x, cb2[r3.x + 0].xyzw, r2.xyzw
dp4 r4.y, cb2[r3.x + 1].xyzw, r2.xyzw
dp4 r4.z, cb2[r3.x + 2].xyzw, r2.xyzw
mul r2.xyz, r4.xyzx, v5.wwww
add r0.yzw, r0.yyzw, r2.xxyz

#line 24
mov r0.yzw, r0.yyzw  // r0.y <- <SkinningVector return value>.x; r0.z <- <SkinningVector return value>.y; r0.w <- <SkinningVector return value>.z

#line 45
mov r0.yzw, r0.yyzw  // r0.y <- vin.normal.x; r0.z <- vin.normal.y; r0.w <- vin.normal.z

#line 46
nop 
mov r2.xyzw, v2.xyzw

#line 17
itof r3.xyz, l(0, 0, 0, 0)  // r3.x <- v.x; r3.y <- v.y; r3.z <- v.z

#line 22
imul null, r3.w, v4.x, l(4)
dp4 r4.x, cb2[r3.w + 0].xyzw, r2.xyzw
dp4 r4.y, cb2[r3.w + 1].xyzw, r2.xyzw
dp4 r4.z, cb2[r3.w + 2].xyzw, r2.xyzw
mul r4.xyz, r4.xyzx, v5.xxxx
add r3.xyz, r3.xyzx, r4.xyzx
imul null, r3.w, v4.y, l(4)
dp4 r4.x, cb2[r3.w + 0].xyzw, r2.xyzw
dp4 r4.y, cb2[r3.w + 1].xyzw, r2.xyzw
dp4 r4.z, cb2[r3.w + 2].xyzw, r2.xyzw
mul r4.xyz, r4.xyzx, v5.yyyy
add r3.xyz, r3.xyzx, r4.xyzx
imul null, r3.w, v4.z, l(4)
dp4 r4.x, cb2[r3.w + 0].xyzw, r2.xyzw
dp4 r4.y, cb2[r3.w + 1].xyzw, r2.xyzw
dp4 r4.z, cb2[r3.w + 2].xyzw, r2.xyzw
mul r4.xyz, r4.xyzx, v5.zzzz
add r3.xyz, r3.xyzx, r4.xyzx
imul null, r3.w, v4.w, l(4)
dp4 r4.x, cb2[r3.w + 0].xyzw, r2.xyzw
dp4 r4.y, cb2[r3.w + 1].xyzw, r2.xyzw
dp4 r4.z, cb2[r3.w + 2].xyzw, r2.xyzw
mul r2.xyz, r4.xyzx, v5.wwww
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- v.x; r2.y <- v.y; r2.z <- v.z

#line 24
mov r2.xyz, r2.xyzx  // r2.x <- <SkinningVector return value>.x; r2.y <- <SkinningVector return value>.y; r2.z <- <SkinningVector return value>.z

#line 46
mov r2.xyz, r2.xyzx  // r2.x <- vin.tangent.x; r2.y <- vin.tangent.y; r2.z <- vin.tangent.z

#line 48
itof r3.xyz, l(0, 0, 0, 0)  // r3.x <- vout.shadow_texcoord.x; r3.y <- vout.shadow_texcoord.y; r3.z <- vout.shadow_texcoord.z

#line 52
mul r4.xyzw, r1.xxxx, cb1[14].xyzw
mul r5.xyzw, r1.yyyy, cb1[15].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r1.zzzz, cb1[16].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r1.wwww, cb1[17].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- vout.position.x; r4.y <- vout.position.y; r4.z <- vout.position.z; r4.w <- vout.position.w

#line 53
mov r1.xyzw, r1.xyzw  // r1.x <- vout.w_position.x; r1.y <- vout.w_position.y; r1.z <- vout.w_position.z; r1.w <- vout.w_position.w

#line 55
mov r4.xyzw, r4.xyzw  // r4.x <- vout.current_clip_position.x; r4.y <- vout.current_clip_position.y; r4.z <- vout.current_clip_position.z; r4.w <- vout.current_clip_position.w

#line 56
mul r5.xyzw, cb1[30].xyzw, cb0[4].xxxx
mul r6.xyzw, cb1[31].xyzw, cb0[4].yyyy
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb1[32].xyzw, cb0[4].zzzz
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb1[33].xyzw, cb0[4].wwww
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb1[30].xyzw, cb0[5].xxxx
mul r7.xyzw, cb1[31].xyzw, cb0[5].yyyy
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb1[32].xyzw, cb0[5].zzzz
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb1[33].xyzw, cb0[5].wwww
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb1[30].xyzw, cb0[6].xxxx
mul r8.xyzw, cb1[31].xyzw, cb0[6].yyyy
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb1[32].xyzw, cb0[6].zzzz
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb1[33].xyzw, cb0[6].wwww
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb1[30].xyzw, cb0[7].xxxx
mul r9.xyzw, cb1[31].xyzw, cb0[7].yyyy
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, cb1[32].xyzw, cb0[7].zzzz
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, cb1[33].xyzw, cb0[7].wwww
add r8.xyzw, r8.xyzw, r9.xyzw
mul r5.xyzw, r5.xyzw, v0.xxxx
mul r6.xyzw, r6.xyzw, v0.yyyy
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r7.xyzw, v0.zzzz
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r8.xyzw, v0.wwww
add r5.xyzw, r5.xyzw, r6.xyzw  // r5.x <- vout.previous_clip_position.x; r5.y <- vout.previous_clip_position.y; r5.z <- vout.previous_clip_position.z; r5.w <- vout.previous_clip_position.w

#line 58
itof r2.w, l(0)  // r2.w <- vin.normal.w

#line 59
mul r6.xyzw, r0.yyyy, cb0[0].xyzw
mul r7.xyzw, r0.zzzz, cb0[1].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r0.wwww, cb0[2].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r2.wwww, cb0[3].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
dp4 r0.y, r6.xyzw, r6.xyzw
rsq r0.y, r0.y
mul r6.xyzw, r0.yyyy, r6.xyzw  // r6.x <- vout.w_normal.x; r6.y <- vout.w_normal.y; r6.z <- vout.w_normal.z; r6.w <- vout.w_normal.w

#line 61
itof r0.y, l(0)  // r0.y <- vin.tangent.w

#line 62
mul r7.xyzw, r2.xxxx, cb0[0].xyzw
mul r8.xyzw, r2.yyyy, cb0[1].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r2.xyzw, r2.zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r7.xyzw
mul r7.xyzw, r0.yyyy, cb0[3].xyzw
add r2.xyzw, r2.xyzw, r7.xyzw
dp4 r0.y, r2.xyzw, r2.xyzw
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, r2.xxyz  // r0.y <- vout.w_tangent.x; r0.z <- vout.w_tangent.y; r0.w <- vout.w_tangent.z

#line 63
mov r0.x, r0.x  // r0.x <- vout.w_tangent.w

#line 65
mov r2.xy, v3.xyxx  // r2.x <- vout.texcoord.x; r2.y <- vout.texcoord.y

#line 67
mov o0.xyzw, r4.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xyzw, r6.xyzw
mov o3.xyz, r0.yzwy
mov o3.w, r0.x
mov o6.xyzw, r4.xyzw
mov o7.xyzw, r5.xyzw
mov o5.xyz, r3.xyzx
mov o4.xy, r2.xyxx
ret 
// Approximately 183 instruction slots used
