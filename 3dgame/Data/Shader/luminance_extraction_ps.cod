//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PARAMETRIC_CONSTANT_BUFFER
// {
//
//   float extraction_threshold;        // Offset:    0 Size:     4
//   float gaussian_sigma;              // Offset:    4 Size:     4 [unused]
//   float bloom_intensity;             // Offset:    8 Size:     4 [unused]
//   float exposure;                    // Offset:   12 Size:     4 [unused]
//   float extraction_end;              // Offset:   16 Size:     4 [unused]
//   float3 pad;                        // Offset:   20 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[4]                 sampler      NA          NA             s4      1 
// texture_maps[0]                   texture  float4          2d             t0      1 
// PARAMETRIC_CONSTANT_BUFFER        cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB3[1], immediateIndexed
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 22 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\luminance_extraction_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s4  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 23
mov r0.w, r0.w  // r0.w <- alpha

#line 26
dp3 r1.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
ge r1.x, r1.x, cb3[0].x
movc r1.x, r1.x, l(1.000000), l(0)
mul r0.xyz, r0.xyzx, r1.xxxx

#line 32
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 9 instruction slots used
