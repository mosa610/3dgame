//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   float4 options;                    // Offset:    0 Size:    16 [unused]
//   float4 z_buffer_parameteres;       // Offset:   16 Size:    16
//   float4 camera_position;            // Offset:   32 Size:    16
//   float4 camera_direction;           // Offset:   48 Size:    16 [unused]
//   float4 camera_clip_distance;       // Offset:   64 Size:    16 [unused]
//   float4 viewport_size;              // Offset:   80 Size:    16 [unused]
//   row_major float4x4 view_transform; // Offset:   96 Size:    64 [unused]
//   row_major float4x4 projection_transform;// Offset:  160 Size:    64 [unused]
//   row_major float4x4 view_projection_transform;// Offset:  224 Size:    64 [unused]
//   row_major float4x4 inverse_view_transform;// Offset:  288 Size:    64 [unused]
//   row_major float4x4 inverse_projection_transform;// Offset:  352 Size:    64 [unused]
//   row_major float4x4 inverse_view_projection_transform;// Offset:  416 Size:    64
//   row_major float4x4 previous_view_projection_transform;// Offset:  480 Size:    64 [unused]
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   struct directional_lights
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//
//   } directional_light;               // Offset:    0 Size:    32
//   int use_shadow;                    // Offset:   32 Size:     4
//   float shadow_attenuation;          // Offset:   36 Size:     4
//   float shadow_bias;                 // Offset:   40 Size:     4
//   float shadow_dummy;                // Offset:   44 Size:     4 [unused]
//   row_major float4x4 light_view_projection;// Offset:   48 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[0]                 sampler      NA          NA             s0      1 
// shadow_sampler_state              sampler      NA          NA            s10      1 
// gbuffer_base_color                texture  float4          2d             t0      1 
// gbuffer_normal                    texture  float4          2d             t2      1 
// gbuffer_parameter                 texture  float4          2d             t3      1 
// gbuffer_depth                     texture   float          2d             t4      1 
// shadow_map                        texture  float4          2d            t10      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[30], immediateIndexed
dcl_constantbuffer CB2[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 12
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 123 "C:\Users\ba-mu\Desktop\Library\3dgame\HLSL\shading_functions.hlsli"
mov r0.x, l(3.141593)  // r0.x <- PI

#line 34 "C:\Users\ba-mu\Desktop\Library\3dgame\HLSL\deferred\deferred_rendering_directional_ps.hlsl"
nop 

#line 35
nop 

#line 36
nop 

#line 37
nop 

#line 38
nop 

#line 39
nop 

#line 40
nop 

#line 42
nop 
mov r0.yz, v2.xxyx
mov r1.x, cb1[26].x
mov r2.x, cb1[26].y
mov r3.x, cb1[26].z
mov r4.x, cb1[26].w
mov r1.y, cb1[27].x
mov r2.y, cb1[27].y
mov r3.y, cb1[27].z
mov r4.y, cb1[27].w
mov r1.z, cb1[28].x
mov r2.z, cb1[28].y
mov r3.z, cb1[28].z
mov r4.z, cb1[28].w
mov r5.xyzw, cb1[29].xyzw
mov r6.xy, cb1[1].xyxx

#line 97 "C:\Users\ba-mu\Desktop\Library\3dgame\HLSL\deferred\gbuffer.hlsli"
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v2.xyxx, t0.xyzw, s0  // r7.x <- base_color.x; r7.y <- base_color.y; r7.z <- base_color.z; r7.w <- base_color.w

#line 99
sample_indexable(texture2d)(float,float,float,float) r8.xyz, v2.xyxx, t2.xyzw, s0  // r8.x <- normal.x; r8.y <- normal.y; r8.z <- normal.z

#line 100
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, v2.xyxx, t3.yzxw, s0  // r9.z <- parameter.x; r9.x <- parameter.y; r9.y <- parameter.z; r9.w <- parameter.w

#line 101
sample_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t4.yzwx, s0  // r0.w <- linear_depth

#line 105
mov r7.xyz, r7.xyzx  // r7.x <- ret.base_color.x; r7.y <- ret.base_color.y; r7.z <- ret.base_color.z

#line 106
mul r6.z, r7.w, l(32.000000)
add r6.z, r6.z, l(0.500000)
ftoi r10.w, r6.z  // r10.w <- ret.shading_model

#line 108
mov r8.xyz, r8.xyzx  // r8.x <- ret.w_normal.x; r8.y <- ret.w_normal.y; r8.z <- ret.w_normal.z

#line 109
mov r9.z, r9.z  // r9.z <- ret.occlusion_factor

#line 110
mov r9.x, r9.x  // r9.x <- ret.roughness

#line 111
mov r9.y, r9.y  // r9.y <- ret.metalness

#line 112
mov r9.w, r9.w  // r9.w <- ret.occlusion_strength

#line 115
mul r0.yz, r0.yyzy, l(0.000000, 2.000000, -2.000000, 0.000000)
add r11.xy, r0.yzyy, l(-1.000000, 1.000000, 0.000000, 0.000000)  // r11.x <- position.x; r11.y <- position.y
nop 
mov r0.w, r0.w
mov r6.xy, r6.xyxx

#line 66
div r0.y, l(1.000000), r0.w
mov r0.z, -r6.y
add r0.y, r0.z, r0.y
div r11.z, r0.y, r6.x  // r11.z <- <convert_linear_depth_to_projection_depth return value>

#line 115
itof r11.w, l(1)  // r11.w <- position.w
mov r11.z, r11.z  // r11.z <- position.z

#line 116
mov r1.w, r5.x
dp4 r0.y, r11.xyzw, r1.xyzw  // r0.y <- position.x
mov r2.w, r5.y
dp4 r0.z, r11.xyzw, r2.xyzw  // r0.z <- position.y
mov r3.w, r5.z
dp4 r0.w, r11.xyzw, r3.xyzw  // r0.w <- position.z
mov r4.w, r5.w
dp4 r1.x, r11.xyzw, r4.xyzw  // r1.x <- position.w

#line 117
div r10.xyz, r0.yzwy, r1.xxxx  // r10.x <- ret.w_position.x; r10.y <- ret.w_position.y; r10.z <- ret.w_position.z

#line 118
mov r10.w, r10.w  // r10.w <- <DecodeGBuffer return value>.shading_model
mov r10.xyz, r10.xyzx  // r10.x <- <DecodeGBuffer return value>.w_position.x; r10.y <- <DecodeGBuffer return value>.w_position.y; r10.z <- <DecodeGBuffer return value>.w_position.z
mov r9.x, r9.x  // r9.x <- <DecodeGBuffer return value>.roughness
mov r9.y, r9.y  // r9.y <- <DecodeGBuffer return value>.metalness
mov r9.z, r9.z  // r9.z <- <DecodeGBuffer return value>.occlusion_factor
mov r9.w, r9.w  // r9.w <- <DecodeGBuffer return value>.occlusion_strength
mov r7.xyz, r7.xyzx  // r7.x <- <DecodeGBuffer return value>.base_color.x; r7.y <- <DecodeGBuffer return value>.base_color.y; r7.z <- <DecodeGBuffer return value>.base_color.z
mov r8.xyz, r8.xyzx  // r8.x <- <DecodeGBuffer return value>.w_normal.x; r8.y <- <DecodeGBuffer return value>.w_normal.y; r8.z <- <DecodeGBuffer return value>.w_normal.z

#line 42 "C:\Users\ba-mu\Desktop\Library\3dgame\HLSL\deferred\deferred_rendering_directional_ps.hlsl"
mov r9.xyzw, r9.xyzw  // r9.x <- data.roughness; r9.y <- data.metalness; r9.z <- data.occlusion_factor; r9.w <- data.occlusion_strength
mov r7.xyz, r7.xyzx  // r7.x <- data.base_color.x; r7.y <- data.base_color.y; r7.z <- data.base_color.z
mov r8.xyz, r8.xyzx  // r8.x <- data.w_normal.x; r8.y <- data.w_normal.y; r8.z <- data.w_normal.z
mov r10.xyzw, r10.xyzw  // r10.x <- data.w_position.x; r10.y <- data.w_position.y; r10.z <- data.w_position.z; r10.w <- data.shading_model

#line 44
itof r0.yzw, l(0, 0, 0, 0)  // r0.y <- total_diffuse.x; r0.z <- total_diffuse.y; r0.w <- total_diffuse.z
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- total_specular.x; r1.y <- total_specular.y; r1.z <- total_specular.z

#line 45
if_nz r10.w

#line 47
  itof r1.w, l(1)  // r1.w <- attenuation

#line 48
  ine r2.x, l(0, 0, 0, 0), cb2[2].x
  if_nz r2.x

#line 54
    mul r2.xyzw, r10.xxxx, cb2[3].xyzw
    mul r3.xyzw, r10.yyyy, cb2[4].xyzw
    add r2.xyzw, r2.xyzw, r3.xyzw
    mul r3.xyzw, r10.zzzz, cb2[5].xyzw
    add r2.xyzw, r2.xyzw, r3.xyzw
    mul r3.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- wvpPos.x; r2.y <- wvpPos.y; r2.z <- wvpPos.z; r2.w <- wvpPos.w

#line 56
    div r2.xyz, r2.zxyz, r2.wwww  // r2.x <- wvpPos.z; r2.y <- wvpPos.x; r2.z <- wvpPos.y

#line 57
    mov r2.w, -r2.z  // r2.w <- wvpPos.y

#line 58
    mul r2.yz, r2.yywy, l(0.000000, 0.500000, 0.500000, 0.000000)
    add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)  // r2.y <- wvpPos.x; r2.z <- wvpPos.y

#line 59
    mov r2.yz, r2.yyzy  // r2.y <- shadow_texcoord.x; r2.z <- shadow_texcoord.y
    mov r2.x, r2.x  // r2.x <- shadow_texcoord.z

#line 62
    sample_indexable(texture2d)(float,float,float,float) r2.y, r2.yzyy, t10.yxzw, s10  // r2.y <- depth

#line 64
    mov r2.y, -r2.y
    add r2.x, r2.y, r2.x
    lt r2.x, cb2[2].z, r2.x
    if_nz r2.x

#line 66
      mov r1.w, cb2[2].y

#line 67
    endif 

#line 68
  endif 

#line 71
  mov r1.w, r1.w  // r1.w <- lighting_data.attenuation

#line 72
  dp3 r2.x, cb2[0].xyzx, cb2[0].xyzx
  rsq r2.x, r2.x
  mul r2.xyz, r2.xxxx, cb2[0].xyzx  // r2.x <- lighting_data.direction.x; r2.y <- lighting_data.direction.y; r2.z <- lighting_data.direction.z

#line 73
  mul r3.xyz, cb2[1].wwww, cb2[1].xyzx  // r3.x <- lighting_data.color.x; r3.y <- lighting_data.color.y; r3.z <- lighting_data.color.z

#line 74
  mov r4.xyz, cb1[2].xyzx  // r4.x <- lighting_data.camera_position.x; r4.y <- lighting_data.camera_position.y; r4.z <- lighting_data.camera_position.z

#line 75
  nop 
  mov r7.xyz, r7.xyzx
  mov r8.xyz, r8.xyzx
  mov r10.xyz, r10.xyzx
  mov r10.w, r10.w
  mov r9.xyzw, r9.xyzw
  mov r2.xyz, r2.xyzx
  mov r3.xyz, r3.xyzx
  mov r1.w, r1.w
  mov r4.xyz, r4.xyzx

#line 23 "C:\Users\ba-mu\Desktop\Library\3dgame\HLSL\deferred\shading_models.hlsli"
  itof r5.xyzw, l(0, 0, 0, 0)  // r5.x <- result.diffuse.x; r5.y <- result.diffuse.y; r5.z <- result.diffuse.z; r5.w <- result.specular.x
  itof r6.yz, l(0, 0, 0, 0)  // r6.y <- result.specular.y; r6.z <- result.specular.z

#line 24
  switch r10.w

#line 26
    case l(0)

#line 29
    mov r6.w, r5.w
    mov r6.xyz, r6.wyzw  // r6.x <- result.specular.x
    break   // r5.w <- result.specular.x

#line 31
    case l(1)

#line 33
    mov r7.xyz, r7.xyzx  // r7.x <- albedo.x; r7.y <- albedo.y; r7.z <- albedo.z

#line 34
    dp3 r2.w, r8.xyzx, r8.xyzx
    rsq r2.w, r2.w
    mul r8.xyz, r2.wwww, r8.xyzx  // r8.x <- normal.x; r8.y <- normal.y; r8.z <- normal.z

#line 35
    mov r4.xyz, -r4.xyzx
    add r4.xyz, r4.xyzx, r10.xyzx
    dp3 r2.w, r4.xyzx, r4.xyzx
    rsq r2.w, r2.w
    mul r4.xyz, r2.wwww, r4.xyzx  // r4.x <- view_vector.x; r4.y <- view_vector.y; r4.z <- view_vector.z

#line 36
    mov r10.xyz, -r7.xyzx
    add r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    mul r10.xyz, r9.yyyy, r10.xyzx
    add r10.xyz, r7.xyzx, r10.xyzx  // r10.x <- diffuse_reflectance.x; r10.y <- diffuse_reflectance.y; r10.z <- diffuse_reflectance.z

#line 37
    mov r11.xyz, l(-0.040000,-0.040000,-0.040000,-0.000000)
    add r7.xyz, r7.xyzx, r11.xyzx
    mul r7.xyz, r7.xyzx, r9.yyyy
    add r7.xyz, r7.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)  // r7.x <- fresnel0.x; r7.y <- fresnel0.y; r7.z <- fresnel0.z

#line 38
    nop 
    mov r10.xyz, r10.xyzx
    mov r7.xyz, r7.xyzx
    mov r8.xyz, r8.xyzx
    mov r4.xyz, r4.xyzx
    mov r2.xyz, r2.xyzx
    mov r3.xyz, r3.xyzx
    mov r9.x, r9.x

#line 209 "C:\Users\ba-mu\Desktop\Library\3dgame\HLSL\shading_functions.hlsli"
    mov r8.xyz, r8.xyzx  // r8.x <- N.x; r8.y <- N.y; r8.z <- N.z

#line 210
    mov r2.xyz, -r2.xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 211
    mov r4.xyz, -r4.xyzx  // r4.x <- V.x; r4.y <- V.y; r4.z <- V.z

#line 212
    add r11.xyz, r2.xyzx, r4.xyzx
    dp3 r2.w, r11.xyzx, r11.xyzx
    rsq r2.w, r2.w
    mul r11.xyz, r2.wwww, r11.xyzx  // r11.x <- H.x; r11.y <- H.y; r11.z <- H.z

#line 214
    dp3 r2.w, r8.xyzx, r4.xyzx
    max r2.w, r2.w, l(0.000100)  // r2.w <- NdotV

#line 215
    dp3 r2.x, r8.xyzx, r2.xyzx
    max r2.x, r2.x, l(0.000100)  // r2.x <- NdotL

#line 216
    dp3 r2.y, r8.xyzx, r11.xyzx
    max r2.y, r2.y, l(0.000100)  // r2.y <- NdotH

#line 217
    dp3 r2.z, r4.xyzx, r11.xyzx
    max r2.z, r2.z, l(0.000100)  // r2.z <- VdotH

#line 219
    mul r3.xyz, r2.xxxx, r3.xyzx  // r3.x <- irradiance.x; r3.y <- irradiance.y; r3.z <- irradiance.z

#line 222
    nop 
    mov r7.xyz, r7.xyzx
    mov r2.z, r2.z

#line 141
    mov r4.xyz, -r7.xyzx
    add r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mov r2.z, -r2.z
    add r2.z, r2.z, l(1.000000)
    max r2.z, r2.z, l(0.000000)
    min r2.z, r2.z, l(1.000000)
    mov r3.w, l(1.000000)
    mul r3.w, r2.z, r3.w
    mul r2.z, r2.z, r2.z
    mul r2.z, r2.z, r2.z
    mul r2.z, r2.z, r3.w
    mul r4.xyz, r2.zzzz, r4.xyzx
    add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- <CalcFresnel return value>.x; r4.y <- <CalcFresnel return value>.y; r4.z <- <CalcFresnel return value>.z

#line 222
    mov r4.xyz, r4.xyzx  // r4.x <- F.x; r4.y <- F.y; r4.z <- F.z

#line 225
    nop 
    mov r10.xyz, r10.xyzx

#line 131
    div r7.xyz, r10.xyzx, r0.xxxx  // r7.x <- <DiffuseBRDF return value>.x; r7.y <- <DiffuseBRDF return value>.y; r7.z <- <DiffuseBRDF return value>.z

#line 225
    mov r8.xyz, -r4.xyzx
    add r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r7.xyz, r7.xyzx, r8.xyzx
    mul r7.xyz, r3.xyzx, r7.xyzx  // r7.x <- outDiffuse.x; r7.y <- outDiffuse.y; r7.z <- outDiffuse.z

#line 228
    nop 
    mov r2.w, r2.w
    mov r2.x, r2.x
    mov r2.y, r2.y
    mov r4.xyz, r4.xyzx
    mov r9.x, r9.x

#line 182
    nop 
    mov r2.y, r2.y
    mov r9.x, r9.x

#line 151
    mul r2.z, r9.x, r9.x  // r2.z <- a

#line 152
    mul r2.y, r2.y, r2.y
    mov r3.w, l(-1.000000)
    add r3.w, r2.z, r3.w
    mul r2.y, r2.y, r3.w
    add r2.y, r2.y, l(1.000000)  // r2.y <- b

#line 153
    mul r0.x, r0.x, r2.y
    mul r0.x, r2.y, r0.x
    div r0.x, r2.z, r0.x  // r0.x <- <CalcNormalDistributionFunction return value>

#line 182
    mov r0.x, r0.x  // r0.x <- D

#line 184
    nop 
    mov r2.x, r2.x
    mov r2.w, r2.w
    mov r9.x, r9.x

#line 164
    mul r2.y, r9.x, l(0.500000)  // r2.y <- r

#line 165
    mov r2.z, -r2.y
    add r2.z, r2.z, l(1.000000)
    mul r2.z, r2.z, r2.x
    add r2.z, r2.y, r2.z
    div r2.z, r2.x, r2.z  // r2.z <- shadowing

#line 166
    mov r3.w, -r2.y
    add r3.w, r3.w, l(1.000000)
    mul r3.w, r2.w, r3.w
    add r2.y, r2.y, r3.w
    div r2.y, r2.w, r2.y  // r2.y <- masking

#line 167
    mul r2.y, r2.y, r2.z  // r2.y <- <CalcGeometryFunction return value>

#line 184
    mov r2.y, r2.y  // r2.y <- G

#line 186
    mul r0.x, r0.x, r2.y
    mul r4.xyz, r4.xyzx, r0.xxxx
    mul r0.x, r2.w, r2.x
    mul r0.x, r0.x, l(4.000000)
    div r2.xyz, r4.xyzx, r0.xxxx  // r2.x <- <SpecularBRDF return value>.x; r2.y <- <SpecularBRDF return value>.y; r2.z <- <SpecularBRDF return value>.z

#line 228
    mul r2.xyz, r3.xyzx, r2.xyzx  // r2.x <- outSpecular.x; r2.y <- outSpecular.y; r2.z <- outSpecular.z

#line 38 "C:\Users\ba-mu\Desktop\Library\3dgame\HLSL\deferred\shading_models.hlsli"
    mov r7.xyz, r7.xyzx  // r7.x <- result.diffuse.x; r7.y <- result.diffuse.y; r7.z <- result.diffuse.z
    mov r2.xyz, r2.xyzx  // r2.x <- result.specular.x; r2.y <- result.specular.y; r2.z <- result.specular.z

#line 40
    mul r3.xyz, r1.wwww, r7.xyzx  // r3.x <- result.diffuse.x; r3.y <- result.diffuse.y; r3.z <- result.diffuse.z

#line 41
    mul r2.xyz, r1.wwww, r2.xyzx

#line 44
    mul r4.xyz, r9.zzzz, r3.xyzx
    mov r7.xyz, -r3.xyzx
    add r4.xyz, r4.xyzx, r7.xyzx
    mul r4.xyz, r4.xyzx, r9.wwww
    add r5.xyz, r3.xyzx, r4.xyzx  // r5.x <- result.diffuse.x; r5.y <- result.diffuse.y; r5.z <- result.diffuse.z

#line 45
    mul r3.xyz, r9.zzzz, r2.xyzx
    mov r4.xyz, -r2.xyzx
    add r3.xyz, r3.xyzx, r4.xyzx
    mul r3.xyz, r3.xyzx, r9.wwww
    add r6.xyz, r2.xyzx, r3.xyzx  // r6.y <- result.specular.y; r6.z <- result.specular.z; r6.x <- result.specular.x

#line 46
    break   // r7.x <- data.base_color.x; r7.y <- data.base_color.y; r7.z <- data.base_color.z; r8.x <- data.w_normal.x; r8.y <- data.w_normal.y; r8.z <- data.w_normal.z; r10.x <- data.w_position.x; r10.y <- data.w_position.y; r10.z <- data.w_position.z; r2.x <- lighting_data.direction.x; r2.y <- lighting_data.direction.y; r2.z <- lighting_data.direction.z; r3.x <- lighting_data.color.x; r3.y <- lighting_data.color.y; r3.z <- lighting_data.color.z; r4.x <- lighting_data.camera_position.x; r4.y <- lighting_data.camera_position.y; r4.z <- lighting_data.camera_position.z; r0.x <- PI; r7.x <- gbuffer_data.base_color.x; r7.y <- gbuffer_data.base_color.y; r7.z <- gbuffer_data.base_color.z; r8.x <- gbuffer_data.w_normal.x; r8.y <- gbuffer_data.w_normal.y; r8.z <- gbuffer_data.w_normal.z; r10.x <- gbuffer_data.w_position.x; r10.y <- gbuffer_data.w_position.y; r10.z <- gbuffer_data.w_position.z; r2.x <- lighting_data.direction.x; r2.y <- lighting_data.direction.y; r2.z <- lighting_data.direction.z; r3.x <- lighting_data.color.x; r3.y <- lighting_data.color.y; r3.z <- lighting_data.color.z; r4.x <- lighting_data.camera_position.x; r4.y <- lighting_data.camera_position.y; r4.z <- lighting_data.camera_position.z; r5.w <- result.specular.x; r0.x <- PI

#line 48
    default 
    mov r6.x, r5.w
    mov r6.xyz, r6.xyzx  // r6.x <- result.specular.x
    break   // r5.w <- result.specular.x
  endswitch   // r6.x <- result.specular.x

#line 50
  mov r5.xyz, r5.xyzx  // r5.x <- <integrate_bxdf return value>.diffuse.x; r5.y <- <integrate_bxdf return value>.diffuse.y; r5.z <- <integrate_bxdf return value>.diffuse.z
  mov r6.xyz, r6.xyzx  // r6.x <- <integrate_bxdf return value>.specular.x; r6.y <- <integrate_bxdf return value>.specular.y; r6.z <- <integrate_bxdf return value>.specular.z

#line 75 "C:\Users\ba-mu\Desktop\Library\3dgame\HLSL\deferred\deferred_rendering_directional_ps.hlsl"
  mov r5.xyz, r5.xyzx  // r5.x <- result.diffuse.x; r5.y <- result.diffuse.y; r5.z <- result.diffuse.z
  mov r6.xyz, r6.xyzx  // r6.x <- result.specular.x; r6.y <- result.specular.y; r6.z <- result.specular.z

#line 76
  add r0.yzw, r0.yyzw, r5.xxyz

#line 77
  add r1.xyz, r1.xyzx, r6.xyzx

#line 78
endif 

#line 79
add o0.xyz, r0.yzwy, r1.xyzx
itof o0.w, l(1)
ret 
// Approximately 257 instruction slots used
