//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[0]                 sampler      NA          NA             s0      1 
// gbuffer_base_color                texture  float4          2d             t0      1 
// gbuffer_emissive_color            texture  float4          2d             t1      1 
// gbuffer_parameter                 texture  float4          2d             t3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 24 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\deferred\deferred_rendering_indirect_ps.hlsl"
nop 

#line 25
nop 

#line 26
nop 

#line 27
nop 

#line 28
nop 

#line 29
nop 

#line 30
nop 

#line 32
nop 

#line 97 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\deferred\gbuffer.hlsli"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0  // r0.x <- base_color.x; r0.y <- base_color.y; r0.z <- base_color.z; r0.w <- base_color.w

#line 98
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xyxx, t1.xyzw, s0  // r1.x <- emissive_color.x; r1.y <- emissive_color.y; r1.z <- emissive_color.z

#line 100
sample_indexable(texture2d)(float,float,float,float) r2.xy, v2.xyxx, t3.xwyz, s0
mov r2.xy, r2.xyxx  // r2.x <- parameter.x; r2.y <- parameter.w

#line 105
mov r0.xyz, r0.xyzx  // r0.x <- ret.base_color.x; r0.y <- ret.base_color.y; r0.z <- ret.base_color.z

#line 106
mul r0.w, r0.w, l(32.000000)
add r0.w, r0.w, l(0.500000)
ftoi r3.x, r0.w  // r3.x <- ret.shading_model

#line 107
mov r1.xyz, r1.xyzx  // r1.x <- ret.emissive_color.x; r1.y <- ret.emissive_color.y; r1.z <- ret.emissive_color.z

#line 109
mov r3.y, r2.x  // r3.y <- ret.occlusion_factor

#line 112
mov r3.z, r2.y  // r3.z <- ret.occlusion_strength

#line 115
nop 

#line 118
mov r0.xyz, r0.xyzx  // r0.x <- <DecodeGBuffer return value>.base_color.x; r0.y <- <DecodeGBuffer return value>.base_color.y; r0.z <- <DecodeGBuffer return value>.base_color.z
mov r3.x, r3.x  // r3.x <- <DecodeGBuffer return value>.shading_model
mov r3.y, r3.y  // r3.y <- <DecodeGBuffer return value>.occlusion_factor
mov r3.z, r3.z  // r3.z <- <DecodeGBuffer return value>.occlusion_strength
mov r1.xyz, r1.xyzx  // r1.x <- <DecodeGBuffer return value>.emissive_color.x; r1.y <- <DecodeGBuffer return value>.emissive_color.y; r1.z <- <DecodeGBuffer return value>.emissive_color.z

#line 32 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\deferred\deferred_rendering_indirect_ps.hlsl"
mov r0.xyz, r0.xyzx  // r0.x <- data.base_color.x; r0.y <- data.base_color.y; r0.z <- data.base_color.z
mov r1.xyz, r1.xyzx  // r1.x <- data.emissive_color.x; r1.y <- data.emissive_color.y; r1.z <- data.emissive_color.z
mov r3.xyz, r3.xyzx  // r3.x <- data.shading_model; r3.y <- data.occlusion_factor; r3.z <- data.occlusion_strength

#line 34
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- total_diffuse.x; r2.y <- total_diffuse.y; r2.z <- total_diffuse.z
itof r4.xyz, l(0, 0, 0, 0)  // r4.x <- total_specular.x; r4.y <- total_specular.y; r4.z <- total_specular.z

#line 35
if_nz r3.x

#line 37
  mov r0.xyz, r0.xyzx  // r0.x <- albedo.x; r0.y <- albedo.y; r0.z <- albedo.z

#line 48
  mov r0.xyz, r0.xyzx  // r0.x <- total_diffuse.x; r0.y <- total_diffuse.y; r0.z <- total_diffuse.z

#line 55
  mul r5.xyz, r3.yyyy, r0.xyzx
  mov r6.xyz, -r0.xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  mul r5.xyz, r3.zzzz, r5.xyzx
  add r2.xyz, r0.xyzx, r5.xyzx  // r2.x <- total_diffuse.x; r2.y <- total_diffuse.y; r2.z <- total_diffuse.z

#line 56
  mul r0.xyz, r3.yyyy, r4.xyzx
  mov r3.xyw, -r4.xyxz
  add r0.xyz, r0.xyzx, r3.xywx
  mul r0.xyz, r0.xyzx, r3.zzzz
  add r4.xyz, r0.xyzx, r4.xyzx

#line 57
endif 

#line 59
add r0.xyz, r2.xyzx, r4.xyzx
add o0.xyz, r1.xyzx, r0.xyzx
itof o0.w, l(1)
ret 
// Approximately 48 instruction slots used
