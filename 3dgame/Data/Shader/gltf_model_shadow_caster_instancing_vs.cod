//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   float4 options;                    // Offset:    0 Size:    16 [unused]
//   float4 z_buffer_parameteres;       // Offset:   16 Size:    16 [unused]
//   float4 camera_position;            // Offset:   32 Size:    16 [unused]
//   float4 camera_direction;           // Offset:   48 Size:    16 [unused]
//   float4 camera_clip_distance;       // Offset:   64 Size:    16 [unused]
//   float4 viewport_size;              // Offset:   80 Size:    16 [unused]
//   row_major float4x4 view_transform; // Offset:   96 Size:    64 [unused]
//   row_major float4x4 projection_transform;// Offset:  160 Size:    64 [unused]
//   row_major float4x4 view_projection_transform;// Offset:  224 Size:    64
//   row_major float4x4 inverse_view_transform;// Offset:  288 Size:    64 [unused]
//   row_major float4x4 inverse_projection_transform;// Offset:  352 Size:    64 [unused]
//   row_major float4x4 inverse_view_projection_transform;// Offset:  416 Size:    64 [unused]
//   row_major float4x4 previous_view_projection_transform;// Offset:  480 Size:    64 [unused]
//
// }
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   row_major float4x4 previous_world; // Offset:   64 Size:    64 [unused]
//   float material;                    // Offset:  128 Size:     4 [unused]
//   float has_tangent;                 // Offset:  132 Size:     4 [unused]
//   float skin;                        // Offset:  136 Size:     4 [unused]
//   float adjustalpha;                 // Offset:  140 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyzw        1     NONE   float       
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float       
// JOINTS                   0   xyzw        4     NONE    uint       
// WEIGHTS                  0   xyzw        5     NONE   float       
// WORLD_MATRIX             0   xyzw        6     NONE   float   xyzw
// WORLD_MATRIX             1   xyzw        7     NONE   float   xyzw
// WORLD_MATRIX             2   xyzw        8     NONE   float   xyzw
// WORLD_MATRIX             3   xyzw        9     NONE   float   xyzw
// PREVIOUS_WORLD_MATRIX     0   xyzw       10     NONE   float       
// PREVIOUS_WORLD_MATRIX     1   xyzw       11     NONE   float       
// PREVIOUS_WORLD_MATRIX     2   xyzw       12     NONE   float       
// PREVIOUS_WORLD_MATRIX     3   xyzw       13     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float       
// NORMAL                   0   xyzw        2     NONE   float       
// TANGENT                  0   xyzw        3     NONE   float       
// TEXCOORD                 0   xy          4     NONE   float       
// TEXCOORD                 1   xyz         5     NONE   float       
// CLIP_POSITION            0   xyzw        6     NONE   float       
// CLIP_POSITION            1   xyzw        7     NONE   float       
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[18], immediateIndexed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyz
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_input v8.xyzw
dcl_input v9.xyzw
dcl_output_siv o0.xyzw, position
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.texcoord.x; v3.y <- vin.texcoord.y; 
//   v4.x <- vin.joints.x; v4.y <- vin.joints.y; v4.z <- vin.joints.z; v4.w <- vin.joints.w; 
//   v5.x <- vin.weights.x; v5.y <- vin.weights.y; v5.z <- vin.weights.z; v5.w <- vin.weights.w; 
//   v6.x <- vin.world0.x; v6.y <- vin.world0.y; v6.z <- vin.world0.z; v6.w <- vin.world0.w; 
//   v7.x <- vin.world1.x; v7.y <- vin.world1.y; v7.z <- vin.world1.z; v7.w <- vin.world1.w; 
//   v8.x <- vin.world2.x; v8.y <- vin.world2.y; v8.z <- vin.world2.z; v8.w <- vin.world2.w; 
//   v9.x <- vin.world3.x; v9.y <- vin.world3.y; v9.z <- vin.world3.z; v9.w <- vin.world3.w; 
//   v10.x <- vin.previous_world0.x; v10.y <- vin.previous_world0.y; v10.z <- vin.previous_world0.z; v10.w <- vin.previous_world0.w; 
//   v11.x <- vin.previous_world1.x; v11.y <- vin.previous_world1.y; v11.z <- vin.previous_world1.z; v11.w <- vin.previous_world1.w; 
//   v12.x <- vin.previous_world2.x; v12.y <- vin.previous_world2.y; v12.z <- vin.previous_world2.z; v12.w <- vin.previous_world2.w; 
//   v13.x <- vin.previous_world3.x; v13.y <- vin.previous_world3.y; v13.z <- vin.previous_world3.z; v13.w <- vin.previous_world3.w; 
//   o1.x <- <main return value>.w_position.x; o1.y <- <main return value>.w_position.y; o1.z <- <main return value>.w_position.z; o1.w <- <main return value>.w_position.w; 
//   o2.x <- <main return value>.w_normal.x; o2.y <- <main return value>.w_normal.y; o2.z <- <main return value>.w_normal.z; o2.w <- <main return value>.w_normal.w; 
//   o3.x <- <main return value>.w_tangent.x; o3.y <- <main return value>.w_tangent.y; o3.z <- <main return value>.w_tangent.z; o3.w <- <main return value>.w_tangent.w; 
//   o4.x <- <main return value>.texcoord.x; o4.y <- <main return value>.texcoord.y; 
//   o5.x <- <main return value>.shadow_texcoord.x; o5.y <- <main return value>.shadow_texcoord.y; o5.z <- <main return value>.shadow_texcoord.z; 
//   o6.x <- <main return value>.current_clip_position.x; o6.y <- <main return value>.current_clip_position.y; o6.z <- <main return value>.current_clip_position.z; o6.w <- <main return value>.current_clip_position.w; 
//   o7.x <- <main return value>.previous_clip_position.x; o7.y <- <main return value>.previous_clip_position.y; o7.z <- <main return value>.previous_clip_position.z; o7.w <- <main return value>.previous_clip_position.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 10 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\gltf\gltf_model_shadow_caster_instancing_vs.hlsl"
mov r0.xyzw, v6.xyzw  // r0.x <- world_matrix._m00; r0.y <- world_matrix._m01; r0.z <- world_matrix._m02; r0.w <- world_matrix._m03

#line 11
mov r1.xyzw, v7.xyzw  // r1.x <- world_matrix._m10; r1.y <- world_matrix._m11; r1.z <- world_matrix._m12; r1.w <- world_matrix._m13

#line 12
mov r2.xyzw, v8.xyzw  // r2.x <- world_matrix._m20; r2.y <- world_matrix._m21; r2.z <- world_matrix._m22; r2.w <- world_matrix._m23

#line 13
mov r3.xyzw, v9.xyzw  // r3.x <- world_matrix._m30; r3.y <- world_matrix._m31; r3.z <- world_matrix._m32; r3.w <- world_matrix._m33

#line 14
mul r4.xyzw, r0.xyzw, cb0[0].xxxx
mul r5.xyzw, r1.xyzw, cb0[0].yyyy
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r2.xyzw, cb0[0].zzzz
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r3.xyzw, cb0[0].wwww
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r0.xyzw, cb0[1].xxxx
mul r6.xyzw, r1.xyzw, cb0[1].yyyy
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r2.xyzw, cb0[1].zzzz
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r3.xyzw, cb0[1].wwww
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r0.xyzw, cb0[2].xxxx
mul r7.xyzw, r1.xyzw, cb0[2].yyyy
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r2.xyzw, cb0[2].zzzz
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r3.xyzw, cb0[2].wwww
add r6.xyzw, r6.xyzw, r7.xyzw
mul r0.xyzw, r0.xyzw, cb0[3].xxxx
mul r1.xyzw, r1.xyzw, cb0[3].yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r2.xyzw, cb0[3].zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r3.xyzw, cb0[3].wwww
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- world_matrix._m30; r0.y <- world_matrix._m31; r0.z <- world_matrix._m32; r0.w <- world_matrix._m33
mov r4.x, r4.x  // r4.x <- world_matrix._m00
mov r4.y, r4.y  // r4.y <- world_matrix._m01
mov r4.z, r4.z  // r4.z <- world_matrix._m02
mov r4.w, r4.w  // r4.w <- world_matrix._m03
mov r5.x, r5.x  // r5.x <- world_matrix._m10
mov r5.y, r5.y  // r5.y <- world_matrix._m11
mov r5.z, r5.z  // r5.z <- world_matrix._m12
mov r5.w, r5.w  // r5.w <- world_matrix._m13
mov r6.x, r6.x  // r6.x <- world_matrix._m20
mov r6.y, r6.y  // r6.y <- world_matrix._m21
mov r6.z, r6.z  // r6.z <- world_matrix._m22
mov r6.w, r6.w  // r6.w <- world_matrix._m23

#line 16
itof r1.x, l(1)  // r1.x <- vin.position.w

#line 17
mul r2.xyzw, r4.xxxx, cb1[14].xyzw
mul r3.xyzw, r4.yyyy, cb1[15].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r4.zzzz, cb1[16].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r4.wwww, cb1[17].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r5.xxxx, cb1[14].xyzw
mul r4.xyzw, r5.yyyy, cb1[15].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r5.zzzz, cb1[16].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r5.wwww, cb1[17].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r6.xxxx, cb1[14].xyzw
mul r5.xyzw, r6.yyyy, cb1[15].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r6.zzzz, cb1[16].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r6.wwww, cb1[17].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r0.xxxx, cb1[14].xyzw
mul r6.xyzw, r0.yyyy, cb1[15].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r0.zzzz, cb1[16].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r0.xyzw, r0.wwww, cb1[17].xyzw
add r0.xyzw, r0.xyzw, r5.xyzw
mul r2.xyzw, r2.xyzw, v0.xxxx
mul r3.xyzw, r3.xyzw, v0.yyyy
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r4.xyzw, v0.zzzz
add r2.xyzw, r2.xyzw, r3.xyzw
mul r0.xyzw, r0.xyzw, r1.xxxx
add r0.xyzw, r0.xyzw, r2.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 18
mov o0.xyzw, r0.xyzw
ret 
// Approximately 82 instruction slots used
