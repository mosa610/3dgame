//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   float4 options;                    // Offset:    0 Size:    16 [unused]
//   float4 z_buffer_parameteres;       // Offset:   16 Size:    16 [unused]
//   float4 camera_position;            // Offset:   32 Size:    16 [unused]
//   float4 camera_direction;           // Offset:   48 Size:    16 [unused]
//   float4 camera_clip_distance;       // Offset:   64 Size:    16 [unused]
//   float4 viewport_size;              // Offset:   80 Size:    16 [unused]
//   row_major float4x4 view_transform; // Offset:   96 Size:    64 [unused]
//   row_major float4x4 projection_transform;// Offset:  160 Size:    64 [unused]
//   row_major float4x4 view_projection_transform;// Offset:  224 Size:    64
//   row_major float4x4 inverse_view_transform;// Offset:  288 Size:    64 [unused]
//   row_major float4x4 inverse_projection_transform;// Offset:  352 Size:    64 [unused]
//   row_major float4x4 inverse_view_projection_transform;// Offset:  416 Size:    64 [unused]
//   row_major float4x4 previous_view_projection_transform;// Offset:  480 Size:    64 [unused]
//
// }
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   row_major float4x4 previous_world; // Offset:   64 Size:    64 [unused]
//   float material;                    // Offset:  128 Size:     4 [unused]
//   float has_tangent;                 // Offset:  132 Size:     4 [unused]
//   float skin;                        // Offset:  136 Size:     4 [unused]
//   float adjustalpha;                 // Offset:  140 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyzw        1     NONE   float       
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float       
// JOINTS                   0   xyzw        4     NONE    uint       
// WEIGHTS                  0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// TEXCOORD                 1   xyz         5     NONE   float   xyz 
// CLIP_POSITION            0   xyzw        6     NONE   float   xyzw
// CLIP_POSITION            1   xyzw        7     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[18], immediateIndexed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 12
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.texcoord.x; v3.y <- vin.texcoord.y; 
//   v4.x <- vin.joints.x; v4.y <- vin.joints.y; v4.z <- vin.joints.z; v4.w <- vin.joints.w; 
//   v5.x <- vin.weights.x; v5.y <- vin.weights.y; v5.z <- vin.weights.z; v5.w <- vin.weights.w; 
//   o7.x <- <main return value>.previous_clip_position.x; o7.y <- <main return value>.previous_clip_position.y; o7.z <- <main return value>.previous_clip_position.z; o7.w <- <main return value>.previous_clip_position.w; 
//   o6.x <- <main return value>.current_clip_position.x; o6.y <- <main return value>.current_clip_position.y; o6.z <- <main return value>.current_clip_position.z; o6.w <- <main return value>.current_clip_position.w; 
//   o5.x <- <main return value>.shadow_texcoord.x; o5.y <- <main return value>.shadow_texcoord.y; o5.z <- <main return value>.shadow_texcoord.z; 
//   o4.x <- <main return value>.texcoord.x; o4.y <- <main return value>.texcoord.y; 
//   o3.x <- <main return value>.w_tangent.x; o3.y <- <main return value>.w_tangent.y; o3.z <- <main return value>.w_tangent.z; o3.w <- <main return value>.w_tangent.w; 
//   o2.x <- <main return value>.w_normal.x; o2.y <- <main return value>.w_normal.y; o2.z <- <main return value>.w_normal.z; o2.w <- <main return value>.w_normal.w; 
//   o1.x <- <main return value>.w_position.x; o1.y <- <main return value>.w_position.y; o1.z <- <main return value>.w_position.z; o1.w <- <main return value>.w_position.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 5 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\gltf\gltf_model_shadow_caster_vs.hlsl"
itof r0.xyzw, l(0, 0, 0, 0)  // r0.x <- vout.w_position.x; r0.y <- vout.w_position.y; r0.z <- vout.w_position.z; r0.w <- vout.w_position.w
itof r1.xyzw, l(0, 0, 0, 0)  // r1.x <- vout.w_normal.x; r1.y <- vout.w_normal.y; r1.z <- vout.w_normal.z; r1.w <- vout.w_normal.w
itof r2.xyzw, l(0, 0, 0, 0)  // r2.x <- vout.w_tangent.x; r2.y <- vout.w_tangent.y; r2.z <- vout.w_tangent.z; r2.w <- vout.w_tangent.w
itof r3.xyzw, l(0, 0, 0, 0)  // r3.x <- vout.current_clip_position.x; r3.y <- vout.current_clip_position.y; r3.z <- vout.current_clip_position.z; r3.w <- vout.current_clip_position.w
itof r4.xyzw, l(0, 0, 0, 0)  // r4.x <- vout.previous_clip_position.x; r4.y <- vout.previous_clip_position.y; r4.z <- vout.previous_clip_position.z; r4.w <- vout.previous_clip_position.w
itof r5.xyz, l(0, 0, 0, 0)  // r5.x <- vout.shadow_texcoord.x; r5.y <- vout.shadow_texcoord.y; r5.z <- vout.shadow_texcoord.z
itof r6.xy, l(0, 0, 0, 0)  // r6.x <- vout.texcoord.x; r6.y <- vout.texcoord.y

#line 7
itof r5.w, l(1)  // r5.w <- vin.position.w

#line 8
mul r7.xyzw, cb1[14].xyzw, cb0[0].xxxx
mul r8.xyzw, cb1[15].xyzw, cb0[0].yyyy
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb1[16].xyzw, cb0[0].zzzz
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb1[17].xyzw, cb0[0].wwww
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb1[14].xyzw, cb0[1].xxxx
mul r9.xyzw, cb1[15].xyzw, cb0[1].yyyy
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, cb1[16].xyzw, cb0[1].zzzz
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, cb1[17].xyzw, cb0[1].wwww
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, cb1[14].xyzw, cb0[2].xxxx
mul r10.xyzw, cb1[15].xyzw, cb0[2].yyyy
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, cb1[16].xyzw, cb0[2].zzzz
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, cb1[17].xyzw, cb0[2].wwww
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, cb1[14].xyzw, cb0[3].xxxx
mul r11.xyzw, cb1[15].xyzw, cb0[3].yyyy
add r10.xyzw, r10.xyzw, r11.xyzw
mul r11.xyzw, cb1[16].xyzw, cb0[3].zzzz
add r10.xyzw, r10.xyzw, r11.xyzw
mul r11.xyzw, cb1[17].xyzw, cb0[3].wwww
add r10.xyzw, r10.xyzw, r11.xyzw
mul r7.xyzw, r7.xyzw, v0.xxxx
mul r8.xyzw, r8.xyzw, v0.yyyy
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, r9.xyzw, v0.zzzz
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, r5.wwww, r10.xyzw
add r7.xyzw, r7.xyzw, r8.xyzw  // r7.x <- vout.position.x; r7.y <- vout.position.y; r7.z <- vout.position.z; r7.w <- vout.position.w

#line 9
mov o0.xyzw, r7.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xyzw, r1.xyzw
mov o3.xyzw, r2.xyzw
mov o6.xyzw, r3.xyzw
mov o7.xyzw, r4.xyzw
mov o5.xyz, r5.xyzx
mov o4.xy, r6.xyxx
ret 
// Approximately 52 instruction slots used
