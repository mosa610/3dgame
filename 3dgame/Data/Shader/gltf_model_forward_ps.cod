//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   float4 options;                    // Offset:    0 Size:    16 [unused]
//   float4 z_buffer_parameteres;       // Offset:   16 Size:    16 [unused]
//   float4 camera_position;            // Offset:   32 Size:    16
//   float4 camera_direction;           // Offset:   48 Size:    16 [unused]
//   float4 camera_clip_distance;       // Offset:   64 Size:    16 [unused]
//   float4 viewport_size;              // Offset:   80 Size:    16 [unused]
//   row_major float4x4 view_transform; // Offset:   96 Size:    64 [unused]
//   row_major float4x4 projection_transform;// Offset:  160 Size:    64 [unused]
//   row_major float4x4 view_projection_transform;// Offset:  224 Size:    64 [unused]
//   row_major float4x4 inverse_view_transform;// Offset:  288 Size:    64 [unused]
//   row_major float4x4 inverse_projection_transform;// Offset:  352 Size:    64 [unused]
//   row_major float4x4 inverse_view_projection_transform;// Offset:  416 Size:    64 [unused]
//   row_major float4x4 previous_view_projection_transform;// Offset:  480 Size:    64 [unused]
//
// }
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   row_major float4x4 previous_world; // Offset:   64 Size:    64 [unused]
//   float material;                    // Offset:  128 Size:     4
//   float has_tangent;                 // Offset:  132 Size:     4
//   float skin;                        // Offset:  136 Size:     4 [unused]
//   float adjustalpha;                 // Offset:  140 Size:     4 [unused]
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   struct directional_lights
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//
//   } directional_light;               // Offset:    0 Size:    32
//   
//   struct point_lights
//   {
//       
//       float4 position;               // Offset:   32
//       float4 color;                  // Offset:   48
//       float range;                   // Offset:   64
//       float3 dummy;                  // Offset:   68
//
//   } point_light[8];                  // Offset:   32 Size:   384
//   
//   struct spot_lights
//   {
//       
//       float4 position;               // Offset:  416
//       float4 direction;              // Offset:  432
//       float4 color;                  // Offset:  448
//       float range;                   // Offset:  464
//       float innerCorn;               // Offset:  468
//       float outerCorn;               // Offset:  472
//       float dummy;                   // Offset:  476
//
//   } spot_light[8];                   // Offset:  416 Size:   512
//
// }
//
// cbuffer SHADOWMAP_CONSTANT_BUFFER
// {
//
//   row_major float4x4 light_view_projection;// Offset:    0 Size:    64 [unused]
//   float shadow_attenuation;          // Offset:   64 Size:     4
//   float shadow_bias;                 // Offset:   68 Size:     4
//   float2 shadow_dummy;               // Offset:   72 Size:     8 [unused]
//
// }
//
// Resource bind info for materials
// {
//
//   struct material_constants
//   {
//       
//       float3 emissive_factor;        // Offset:    0
//       int alpha_mode;                // Offset:   12
//       float alpha_cutoff;            // Offset:   16
//       int double_sided;              // Offset:   20
//       
//       struct pbr_metallic_roughness
//       {
//           
//           float4 basecolor_factor;   // Offset:   24
//           
//           struct texture_info
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } basecolor_texture;       // Offset:   40
//           float metallic_factor;     // Offset:   48
//           float roughness_factor;    // Offset:   52
//           
//           struct texture_info
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallic_roughness_texture;// Offset:   56
//
//       } pbr_metallic_roughness;      // Offset:   24
//       
//       struct normal_texture_info
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normal_texture;              // Offset:   64
//       
//       struct occlusion_texture_info
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusion_texture;           // Offset:   76
//       
//       struct texture_info
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissive_texture;            // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[1]                 sampler      NA          NA             s1      1 
// sampler_states[2]                 sampler      NA          NA             s2      1 
// shadow_sampler_state              sampler      NA          NA            s10      1 
// materials                         texture  struct         r/o             t0      1 
// material_textures[0]              texture  float4          2d             t1      1 
// material_textures[1]              texture  float4          2d             t2      1 
// material_textures[2]              texture  float4          2d             t3      1 
// material_textures[3]              texture  float4          2d             t4      1 
// material_textures[4]              texture  float4          2d             t5      1 
// shadow_map                        texture  float4          2d            t10      1 
// diffuse_iem                       texture  float4        cube            t33      1 
// specular_pmrem                    texture  float4        cube            t34      1 
// lut_ggx                           texture  float4          2d            t35      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA            cb4      1 
// SHADOWMAP_CONSTANT_BUFFER         cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// TEXCOORD                 1   xyz         5     NONE   float   xyz 
// CLIP_POSITION            0   xyzw        6     NONE   float       
// CLIP_POSITION            1   xyzw        7     NONE   float       
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[3], immediateIndexed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_constantbuffer CB4[58], dynamicIndexed
dcl_constantbuffer CB5[5], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s10, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texturecube (float,float,float,float) t33
dcl_resource_texturecube (float,float,float,float) t34
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 18
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.w_position.x; v1.y <- pin.w_position.y; v1.z <- pin.w_position.z; v1.w <- pin.w_position.w; 
//   v2.x <- pin.w_normal.x; v2.y <- pin.w_normal.y; v2.z <- pin.w_normal.z; v2.w <- pin.w_normal.w; 
//   v3.x <- pin.w_tangent.x; v3.y <- pin.w_tangent.y; v3.z <- pin.w_tangent.z; v3.w <- pin.w_tangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   v5.x <- pin.shadow_texcoord.x; v5.y <- pin.shadow_texcoord.y; v5.z <- pin.shadow_texcoord.z; 
//   v6.x <- pin.current_clip_position.x; v6.y <- pin.current_clip_position.y; v6.z <- pin.current_clip_position.z; v6.w <- pin.current_clip_position.w; 
//   v7.x <- pin.previous_clip_position.x; v7.y <- pin.previous_clip_position.y; v7.z <- pin.previous_clip_position.z; v7.w <- pin.previous_clip_position.w; 
//   v8.x <- is_front_face; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 123 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\shading_functions.hlsli"
mov r0.x, l(3.141593)  // r0.x <- PI

#line 70 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\gltf\gltf_model_forward_ps.hlsl"
ftou r0.y, cb0[8].x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.x, r0.y, l(0), t0.xxxx  // r1.x <- m.emissive_factor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.y, r0.y, l(4), t0.xxxx  // r1.y <- m.emissive_factor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.z, r0.y, l(8), t0.xxxx  // r1.z <- m.emissive_factor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.x, r0.y, l(24), t0.xxxx  // r2.x <- m.pbr_metallic_roughness.basecolor_factor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.y, r0.y, l(28), t0.xxxx  // r2.y <- m.pbr_metallic_roughness.basecolor_factor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.z, r0.y, l(32), t0.xxxx  // r2.z <- m.pbr_metallic_roughness.basecolor_factor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.w, r0.y, l(36), t0.xxxx  // r2.w <- m.pbr_metallic_roughness.basecolor_factor.w
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(40), t0.xxxx  // r0.z <- m.pbr_metallic_roughness.basecolor_texture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(48), t0.xxxx  // r0.w <- m.pbr_metallic_roughness.metallic_factor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.x, r0.y, l(52), t0.xxxx  // r3.x <- m.pbr_metallic_roughness.roughness_factor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.w, r0.y, l(56), t0.xxxx  // r1.w <- m.pbr_metallic_roughness.metallic_roughness_texture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.z, r0.y, l(64), t0.xxxx  // r3.z <- m.normal_texture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r4.y, r0.y, l(72), t0.xxxx  // r4.y <- m.normal_texture.scale
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.w, r0.y, l(76), t0.xxxx  // r3.w <- m.occlusion_texture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r4.x, r0.y, l(84), t0.xxxx  // r4.x <- m.occlusion_texture.strength
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.y, r0.y, l(88), t0.xxxx  // r0.y <- m.emissive_texture.index

#line 73
mov r2.xyzw, r2.xyzw  // r2.x <- base_color.x; r2.y <- base_color.y; r2.z <- base_color.z; r2.w <- base_color.w

#line 74
ilt r0.z, l(-1), r0.z
if_nz r0.z

#line 76
  sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v4.xyxx, t1.xyzw, s2  // r5.x <- sampled.x; r5.y <- sampled.y; r5.z <- sampled.z; r5.w <- sampled.w

#line 77
  mov r6.xyz, l(1.000000,1.000000,1.000000,0)
  mul r5.xyz, r5.xyzx, r6.xyzx

#line 78
  mul r2.xyzw, r2.xyzw, r5.xyzw

#line 79
endif 

#line 82
mov r0.z, l(-0.010000)
add r0.z, r0.z, r2.w
lt r0.z, r0.z, l(0.000000)
and r0.z, r0.z, l(-1)
discard_nz r0.z

#line 85
mov r1.xyz, r1.xyzx  // r1.x <- emisive_color.x; r1.y <- emisive_color.y; r1.z <- emisive_color.z

#line 86
ilt r0.y, l(-1), r0.y
if_nz r0.y

#line 88
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, v4.xyxx, t4.xyzw, s2
  mov r5.xyz, r5.xyzx  // r5.x <- emisive.x; r5.y <- emisive.y; r5.z <- emisive.z

#line 89
  mov r6.xyz, l(1.000000,1.000000,1.000000,0)
  mul r5.xyz, r5.xyzx, r6.xyzx

#line 90
  mul r1.xyz, r1.xyzx, r5.xyzx

#line 91
endif 

#line 94
dp3 r0.y, v2.xyzx, v2.xyzx
rsq r0.y, r0.y
mul r5.xyz, r0.yyyy, v2.xyzx  // r5.x <- N.x; r5.y <- N.y; r5.z <- N.z

#line 95
ne r6.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[8].yyyy
dp3 r0.y, v3.xyzx, v3.xyzx
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, v3.xyzx
itof r8.xyz, l(1, 0, 0, 0)
movc r6.xyz, r6.xyzx, r7.xyzx, r8.xyzx  // r6.x <- T.x; r6.y <- T.y; r6.z <- T.z

#line 96
ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[8].y
movc r0.y, r0.y, v3.w, l(1.000000)  // r0.y <- sigma

#line 97
dp3 r0.z, r5.xyzx, r6.xyzx
mul r7.xyz, r0.zzzz, r5.xyzx
mov r7.xyz, -r7.xyzx
add r6.xyz, r6.xyzx, r7.xyzx
dp3 r0.z, r6.xyzx, r6.xyzx
rsq r0.z, r0.z
mul r6.xyz, r0.zzzz, r6.xyzx  // r6.x <- T.x; r6.y <- T.y; r6.z <- T.z

#line 98
mul r7.xyz, r5.yzxy, r6.zxyz
mul r8.xyz, r5.zxyz, r6.yzxy
mov r8.xyz, -r8.xyzx
add r7.xyz, r7.xyzx, r8.xyzx
mul r7.xyz, r0.yyyy, r7.xyzx
dp3 r0.y, r7.xyzx, r7.xyzx
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, r7.xyzx  // r7.x <- B.x; r7.y <- B.y; r7.z <- B.z

#line 100
if_z v8.x

#line 102
  mov r6.xyz, -r6.xyzx

#line 103
  mov r7.xyz, -r7.xyzx

#line 104
  mov r5.xyz, -r5.xyzx

#line 105
endif 

#line 108
ilt r0.y, l(-1), r3.z
if_nz r0.y

#line 110
  sample_indexable(texture2d)(float,float,float,float) r8.xyz, v4.xyxx, t3.xyzw, s1  // r8.x <- sampled.x; r8.y <- sampled.y; r8.z <- sampled.z

#line 111
  mov r8.xyz, r8.xyzx  // r8.x <- normal_factor.x; r8.y <- normal_factor.y; r8.z <- normal_factor.z

#line 112
  mul r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mov r9.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r8.xyz, r8.xyzx, r9.xyzx  // r8.x <- normal_factor.x; r8.y <- normal_factor.y; r8.z <- normal_factor.z

#line 113
  mov r4.w, l(1.000000)
  mul r4.yzw, r4.yyyw, r8.xxyz
  dp3 r0.y, r4.yzwy, r4.yzwy
  rsq r0.y, r0.y
  mul r4.yzw, r0.yyyy, r4.yyzw  // r4.y <- normal_factor.x; r4.z <- normal_factor.y; r4.w <- normal_factor.z

#line 114
  mul r6.xyz, r6.xyzx, r4.yyyy
  mul r7.xyz, r7.xyzx, r4.zzzz
  add r6.xyz, r6.xyzx, r7.xyzx
  mul r4.yzw, r5.xxyz, r4.wwww
  add r4.yzw, r4.yyzw, r6.xxyz
  dp3 r0.y, r4.yzwy, r4.yzwy
  rsq r0.y, r0.y
  mul r5.xyz, r0.yyyy, r4.yzwy

#line 115
endif 

#line 118
mov r3.x, r3.x  // r3.x <- roughness

#line 119
mov r0.w, r0.w  // r0.w <- metalness

#line 120
ilt r0.y, l(-1), r1.w
if_nz r0.y

#line 122
  sample_indexable(texture2d)(float,float,float,float) r0.yz, v4.xyxx, t2.xyzw, s1  // r0.y <- sampled.y; r0.z <- sampled.z

#line 123
  mul r3.x, r0.y, r3.x

#line 124
  mul r0.w, r0.z, r0.w

#line 125
endif 

#line 128
mov r0.y, l(1.000000)  // r0.y <- occlusion_factor

#line 129
ilt r0.z, l(-1), r3.w
if_nz r0.z

#line 131
  sample_indexable(texture2d)(float,float,float,float) r0.z, v4.xyxx, t5.yzxw, s1  // r0.z <- sampled.x

#line 132
  mul r0.y, r0.z, r0.y

#line 133
endif 

#line 134
mov r4.x, r4.x  // r4.x <- occlusion_strength

#line 137
mov r2.xyz, r2.xyzx  // r2.x <- albedo.x; r2.y <- albedo.y; r2.z <- albedo.z

#line 140
mov r4.yzw, -r2.xxyz
add r4.yzw, r4.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r4.yzw, r0.wwww, r4.yyzw
add r4.yzw, r2.xxyz, r4.yyzw  // r4.y <- diffuse_reflectance.x; r4.z <- diffuse_reflectance.y; r4.w <- diffuse_reflectance.z

#line 143
mov r6.xyz, l(-0.040000,-0.040000,-0.040000,-0.000000)
add r2.xyz, r2.xyzx, r6.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
add r2.xyz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)  // r2.x <- F0.x; r2.y <- F0.y; r2.z <- F0.z

#line 146
mov r6.xyz, -cb1[2].xyzx
add r6.xyz, r6.xyzx, v1.xyzx
dp3 r0.z, r6.xyzx, r6.xyzx
rsq r0.z, r0.z
mul r6.xyz, r0.zzzz, r6.xyzx  // r6.x <- V.x; r6.y <- V.y; r6.z <- V.z

#line 149
itof r7.xyz, l(0, 0, 0, 0)  // r7.x <- total_diffuse.x; r7.y <- total_diffuse.y; r7.z <- total_diffuse.z
itof r8.xyz, l(0, 0, 0, 0)  // r8.x <- total_specular.x; r8.y <- total_specular.y; r8.z <- total_specular.z

#line 154
dp3 r0.z, cb4[0].xyzx, cb4[0].xyzx
rsq r0.z, r0.z
mul r9.xyz, r0.zzzz, cb4[0].xyzx  // r9.x <- L.x; r9.y <- L.y; r9.z <- L.z

#line 155
nop 
mov r4.yzw, r4.yyzw
mov r2.xyz, r2.xyzx
mov r5.xyz, r5.xyzx
mov r6.xyz, r6.xyzx
mov r9.xyz, r9.xyzx
mul r10.xyz, cb4[1].wwww, cb4[1].xyzx
mov r3.x, r3.x

#line 209 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\shading_functions.hlsli"
mov r5.xyz, r5.xyzx  // r5.x <- N.x; r5.y <- N.y; r5.z <- N.z

#line 210
mov r9.xyz, -r9.xyzx  // r9.x <- L.x; r9.y <- L.y; r9.z <- L.z

#line 211
mov r11.xyz, -r6.xyzx  // r11.x <- V.x; r11.y <- V.y; r11.z <- V.z

#line 212
add r12.xyz, r9.xyzx, r11.xyzx
dp3 r0.z, r12.xyzx, r12.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, r12.xyzx  // r12.x <- H.x; r12.y <- H.y; r12.z <- H.z

#line 214
dp3 r0.z, r5.xyzx, r11.xyzx
max r0.z, r0.z, l(0.000100)  // r0.z <- NdotV

#line 215
dp3 r0.w, r5.xyzx, r9.xyzx
max r0.w, r0.w, l(0.000100)  // r0.w <- NdotL

#line 216
dp3 r1.w, r5.xyzx, r12.xyzx
max r1.w, r1.w, l(0.000100)  // r1.w <- NdotH

#line 217
dp3 r3.z, r11.xyzx, r12.xyzx
max r3.z, r3.z, l(0.000100)  // r3.z <- VdotH

#line 219
mul r9.xyz, r0.wwww, r10.xyzx  // r9.x <- irradiance.x; r9.y <- irradiance.y; r9.z <- irradiance.z

#line 222
nop 
mov r2.xyz, r2.xyzx
mov r3.z, r3.z

#line 141
mov r10.xyz, -r2.xyzx
add r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov r3.z, -r3.z
add r3.z, r3.z, l(1.000000)
max r3.z, r3.z, l(0.000000)
min r3.z, r3.z, l(1.000000)
mov r3.w, l(1.000000)
mul r3.w, r3.z, r3.w
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, r3.w
mul r10.xyz, r3.zzzz, r10.xyzx
add r10.xyz, r2.xyzx, r10.xyzx  // r10.x <- <CalcFresnel return value>.x; r10.y <- <CalcFresnel return value>.y; r10.z <- <CalcFresnel return value>.z

#line 222
mov r10.xyz, r10.xyzx  // r10.x <- F.x; r10.y <- F.y; r10.z <- F.z

#line 225
nop 
mov r4.yzw, r4.yyzw

#line 131
div r11.xyz, r4.yzwy, r0.xxxx  // r11.x <- <DiffuseBRDF return value>.x; r11.y <- <DiffuseBRDF return value>.y; r11.z <- <DiffuseBRDF return value>.z

#line 225
mov r12.xyz, -r10.xyzx
add r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xyzx, r12.xyzx
mul r11.xyz, r9.xyzx, r11.xyzx  // r11.x <- outDiffuse.x; r11.y <- outDiffuse.y; r11.z <- outDiffuse.z

#line 228
nop 
mov r0.z, r0.z
mov r0.w, r0.w
mov r1.w, r1.w
mov r10.xyz, r10.xyzx
mov r3.z, r3.x

#line 182
nop 
mov r1.w, r1.w
mov r3.z, r3.z

#line 151
mul r3.w, r3.z, r3.z  // r3.w <- a

#line 152
mul r1.w, r1.w, r1.w
mov r5.w, l(-1.000000)
add r5.w, r3.w, r5.w
mul r1.w, r1.w, r5.w
add r1.w, r1.w, l(1.000000)  // r1.w <- b

#line 153
mul r5.w, r0.x, r1.w
mul r1.w, r1.w, r5.w
div r1.w, r3.w, r1.w  // r1.w <- <CalcNormalDistributionFunction return value>

#line 182
mov r1.w, r1.w  // r1.w <- D

#line 184
nop 
mov r0.w, r0.w
mov r0.z, r0.z
mov r3.z, r3.z

#line 164
mul r3.z, r3.z, l(0.500000)  // r3.z <- r

#line 165
mov r3.w, -r3.z
add r3.w, r3.w, l(1.000000)
mul r3.w, r0.w, r3.w
add r3.w, r3.z, r3.w
div r3.w, r0.w, r3.w  // r3.w <- shadowing

#line 166
mov r5.w, -r3.z
add r5.w, r5.w, l(1.000000)
mul r5.w, r0.z, r5.w
add r3.z, r3.z, r5.w
div r3.z, r0.z, r3.z  // r3.z <- masking

#line 167
mul r3.z, r3.z, r3.w  // r3.z <- <CalcGeometryFunction return value>

#line 184
mov r3.z, r3.z  // r3.z <- G

#line 186
mul r1.w, r1.w, r3.z
mul r10.xyz, r10.xyzx, r1.wwww
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(4.000000)
div r10.xyz, r10.xyzx, r0.zzzz  // r10.x <- <SpecularBRDF return value>.x; r10.y <- <SpecularBRDF return value>.y; r10.z <- <SpecularBRDF return value>.z

#line 228
mul r9.xyz, r9.xyzx, r10.xyzx  // r9.x <- outSpecular.x; r9.y <- outSpecular.y; r9.z <- outSpecular.z

#line 155 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\gltf\gltf_model_forward_ps.hlsl"
mov r11.xyz, r11.xyzx  // r11.x <- diffuse.x; r11.y <- diffuse.y; r11.z <- diffuse.z
mov r9.xyz, r9.xyzx  // r9.x <- specular.x; r9.y <- specular.y; r9.z <- specular.z

#line 160
sample_indexable(texture2d)(float,float,float,float) r0.z, v5.xyxx, t10.yzxw, s10
mov r0.z, r0.z  // r0.z <- depth

#line 162
mov r0.z, -r0.z
add r0.z, r0.z, v5.z
lt r0.z, cb5[4].y, r0.z
if_nz r0.z

#line 164
  mul r11.xyz, r11.xyzx, cb5[4].xxxx

#line 165
  mul r9.xyz, r9.xyzx, cb5[4].xxxx

#line 166
endif 

#line 168
add r7.xyz, r7.xyzx, r11.xyzx

#line 169
add r8.xyz, r8.xyzx, r9.xyzx

#line 173
mov r0.z, l(0)  // r0.z <- i
mov r9.xyz, r7.xyzx  // r9.x <- total_diffuse.x; r9.y <- total_diffuse.y; r9.z <- total_diffuse.z
mov r10.xyz, r8.xyzx  // r10.x <- total_specular.x; r10.y <- total_specular.y; r10.z <- total_specular.z
mov r0.w, r0.z  // r0.w <- i
loop 
  ilt r1.w, r0.w, l(8)
  breakc_z r1.w

#line 175
  imul null, r1.w, r0.w, l(3)
  mov r11.xyz, -cb4[r1.w + 2].xyzx
  add r11.xyz, r11.xyzx, v1.xyzx  // r11.x <- L.x; r11.y <- L.y; r11.z <- L.z

#line 176
  dp3 r1.w, r11.xyzx, r11.xyzx
  sqrt r1.w, r1.w  // r1.w <- len

#line 177
  imul null, r3.z, r0.w, l(3)
  ge r3.z, r1.w, cb4[r3.z + 4].x
  if_nz r3.z

#line 178
    iadd r0.w, r0.w, l(1)
    continue 
  endif 

#line 179
  imul null, r3.z, r0.w, l(3)
  div r3.z, r1.w, cb4[r3.z + 4].x
  mov r3.z, -r3.z
  add r3.z, r3.z, l(1.000000)
  max r3.z, r3.z, l(0.000000)
  min r3.z, r3.z, l(1.000000)  // r3.z <- attenuateLength

#line 180
  mul r3.z, r3.z, r3.z  // r3.z <- attenuation

#line 181
  div r11.xyz, r11.xyzx, r1.wwww

#line 183
  nop 
  mov r12.xyz, r4.yzwy
  mov r13.xyz, r2.xyzx
  mov r14.xyz, r5.xyzx
  mov r15.xyz, r6.xyzx
  mov r11.xyz, r11.xyzx
  imul null, r1.w, r0.w, l(3)
  imul null, r3.w, r0.w, l(3)
  mul r16.xyz, cb4[r3.w + 3].wwww, cb4[r1.w + 3].xyzx
  mov r1.w, r3.x

#line 209 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\shading_functions.hlsli"
  mov r14.xyz, r14.xyzx  // r14.x <- N.x; r14.y <- N.y; r14.z <- N.z

#line 210
  mov r11.xyz, -r11.xyzx  // r11.x <- L.x; r11.y <- L.y; r11.z <- L.z

#line 211
  mov r15.xyz, -r15.xyzx  // r15.x <- V.x; r15.y <- V.y; r15.z <- V.z

#line 212
  add r17.xyz, r11.xyzx, r15.xyzx
  dp3 r3.w, r17.xyzx, r17.xyzx
  rsq r3.w, r3.w
  mul r17.xyz, r3.wwww, r17.xyzx  // r17.x <- H.x; r17.y <- H.y; r17.z <- H.z

#line 214
  dp3 r3.w, r14.xyzx, r15.xyzx
  max r3.w, r3.w, l(0.000100)  // r3.w <- NdotV

#line 215
  dp3 r5.w, r14.xyzx, r11.xyzx
  max r5.w, r5.w, l(0.000100)  // r5.w <- NdotL

#line 216
  dp3 r6.w, r14.xyzx, r17.xyzx
  max r6.w, r6.w, l(0.000100)  // r6.w <- NdotH

#line 217
  dp3 r7.w, r15.xyzx, r17.xyzx
  max r7.w, r7.w, l(0.000100)  // r7.w <- VdotH

#line 219
  mul r11.xyz, r5.wwww, r16.xyzx  // r11.x <- irradiance.x; r11.y <- irradiance.y; r11.z <- irradiance.z

#line 222
  nop 
  mov r13.xyz, r13.xyzx
  mov r7.w, r7.w

#line 141
  mov r14.xyz, -r13.xyzx
  add r14.xyz, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mov r7.w, -r7.w
  add r7.w, r7.w, l(1.000000)
  max r7.w, r7.w, l(0.000000)
  min r7.w, r7.w, l(1.000000)
  mov r8.w, l(1.000000)
  mul r8.w, r7.w, r8.w
  mul r7.w, r7.w, r7.w
  mul r7.w, r7.w, r7.w
  mul r7.w, r7.w, r8.w
  mul r14.xyz, r7.wwww, r14.xyzx
  add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- <CalcFresnel return value>.x; r13.y <- <CalcFresnel return value>.y; r13.z <- <CalcFresnel return value>.z

#line 222
  mov r13.xyz, r13.xyzx  // r13.x <- F.x; r13.y <- F.y; r13.z <- F.z

#line 225
  nop 
  mov r12.xyz, r12.xyzx

#line 131
  div r12.xyz, r12.xyzx, r0.xxxx  // r12.x <- <DiffuseBRDF return value>.x; r12.y <- <DiffuseBRDF return value>.y; r12.z <- <DiffuseBRDF return value>.z

#line 225
  mov r14.xyz, -r13.xyzx
  add r14.xyz, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r12.xyz, r12.xyzx, r14.xyzx
  mul r12.xyz, r11.xyzx, r12.xyzx  // r12.x <- outDiffuse.x; r12.y <- outDiffuse.y; r12.z <- outDiffuse.z

#line 228
  nop 
  mov r3.w, r3.w
  mov r5.w, r5.w
  mov r6.w, r6.w
  mov r13.xyz, r13.xyzx
  mov r1.w, r1.w

#line 182
  nop 
  mov r6.w, r6.w
  mov r1.w, r1.w

#line 151
  mul r7.w, r1.w, r1.w  // r7.w <- a

#line 152
  mul r6.w, r6.w, r6.w
  mov r8.w, l(-1.000000)
  add r8.w, r7.w, r8.w
  mul r6.w, r6.w, r8.w
  add r6.w, r6.w, l(1.000000)  // r6.w <- b

#line 153
  mul r8.w, r0.x, r6.w
  mul r6.w, r6.w, r8.w
  div r6.w, r7.w, r6.w  // r6.w <- <CalcNormalDistributionFunction return value>

#line 182
  mov r6.w, r6.w  // r6.w <- D

#line 184
  nop 
  mov r5.w, r5.w
  mov r3.w, r3.w
  mov r1.w, r1.w

#line 164
  mul r1.w, r1.w, l(0.500000)  // r1.w <- r

#line 165
  mov r7.w, -r1.w
  add r7.w, r7.w, l(1.000000)
  mul r7.w, r5.w, r7.w
  add r7.w, r1.w, r7.w
  div r7.w, r5.w, r7.w  // r7.w <- shadowing

#line 166
  mov r8.w, -r1.w
  add r8.w, r8.w, l(1.000000)
  mul r8.w, r3.w, r8.w
  add r1.w, r1.w, r8.w
  div r1.w, r3.w, r1.w  // r1.w <- masking

#line 167
  mul r1.w, r1.w, r7.w  // r1.w <- <CalcGeometryFunction return value>

#line 184
  mov r1.w, r1.w  // r1.w <- G

#line 186
  mul r1.w, r1.w, r6.w
  mul r13.xyz, r13.xyzx, r1.wwww
  mul r1.w, r3.w, r5.w
  mul r1.w, r1.w, l(4.000000)
  div r13.xyz, r13.xyzx, r1.wwww  // r13.x <- <SpecularBRDF return value>.x; r13.y <- <SpecularBRDF return value>.y; r13.z <- <SpecularBRDF return value>.z

#line 228
  mul r11.xyz, r11.xyzx, r13.xyzx  // r11.x <- outSpecular.x; r11.y <- outSpecular.y; r11.z <- outSpecular.z

#line 183 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\gltf\gltf_model_forward_ps.hlsl"
  mov r12.xyz, r12.xyzx  // r12.x <- diffuse.x; r12.y <- diffuse.y; r12.z <- diffuse.z
  mov r11.xyz, r11.xyzx  // r11.x <- specular.x; r11.y <- specular.y; r11.z <- specular.z

#line 186
  mul r12.xyz, r3.zzzz, r12.xyzx
  add r9.xyz, r9.xyzx, r12.xyzx

#line 187
  mul r11.xyz, r3.zzzz, r11.xyzx
  add r10.xyz, r10.xyzx, r11.xyzx

#line 173
  iadd r0.w, r0.w, l(1)

#line 188
endloop 

#line 191
mov r0.z, l(0)  // r0.z <- j
mov r7.xyz, r9.xyzx  // r7.x <- total_diffuse.x; r7.y <- total_diffuse.y; r7.z <- total_diffuse.z
mov r8.xyz, r10.xyzx  // r8.x <- total_specular.x; r8.y <- total_specular.y; r8.z <- total_specular.z
mov r0.w, r0.z  // r0.w <- j
loop 
  ilt r1.w, r0.w, l(8)
  breakc_z r1.w

#line 193
  imul null, r1.w, r0.w, l(4)
  mov r11.xyz, -cb4[r1.w + 26].xyzx
  add r11.xyz, r11.xyzx, v1.xyzx  // r11.x <- L.x; r11.y <- L.y; r11.z <- L.z

#line 194
  dp3 r1.w, r11.xyzx, r11.xyzx
  sqrt r1.w, r1.w  // r1.w <- len

#line 195
  imul null, r3.z, r0.w, l(4)
  ge r3.z, r1.w, cb4[r3.z + 29].x
  if_nz r3.z

#line 196
    iadd r0.w, r0.w, l(1)
    continue 
  endif 

#line 197
  imul null, r3.z, r0.w, l(4)
  div r3.z, r1.w, cb4[r3.z + 29].x
  mov r3.z, -r3.z
  add r3.z, r3.z, l(1.000000)
  max r3.z, r3.z, l(0.000000)
  min r3.z, r3.z, l(1.000000)  // r3.z <- attenuateLength

#line 198
  mul r3.z, r3.z, r3.z  // r3.z <- attenuation

#line 199
  div r11.xyz, r11.xyzx, r1.wwww

#line 200
  imul null, r1.w, r0.w, l(4)
  dp3 r3.w, cb4[r1.w + 27].xyzx, cb4[r1.w + 27].xyzx
  rsq r3.w, r3.w
  mul r12.xyz, r3.wwww, cb4[r1.w + 27].xyzx  // r12.x <- spotDirection.x; r12.y <- spotDirection.y; r12.z <- spotDirection.z

#line 201
  imul null, r1.w, r0.w, l(4)
  sincos null, r1.w, cb4[r1.w + 29].y  // r1.w <- innerCorn

#line 202
  imul null, r3.w, r0.w, l(4)
  sincos null, r3.w, cb4[r3.w + 29].z  // r3.w <- outerCorn

#line 203
  dp3 r5.w, r12.xyzx, r11.xyzx  // r5.w <- angle

#line 204
  mov r3.w, -r3.w
  add r3.w, r1.w, r3.w  // r3.w <- area

#line 205
  mov r5.w, -r5.w
  add r1.w, r1.w, r5.w
  div r1.w, r1.w, r3.w
  mov r1.w, -r1.w
  add r1.w, r1.w, l(1.000000)
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)
  mul r1.w, r1.w, r3.z  // r1.w <- attenuation

#line 208
  nop 
  mov r12.xyz, r4.yzwy
  mov r13.xyz, r2.xyzx
  mov r14.xyz, r5.xyzx
  mov r15.xyz, r6.xyzx
  mov r11.xyz, r11.xyzx
  imul null, r3.z, r0.w, l(4)
  imul null, r3.w, r0.w, l(4)
  mul r16.xyz, cb4[r3.w + 28].wwww, cb4[r3.z + 28].xyzx
  mov r3.z, r3.x

#line 209 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\shading_functions.hlsli"
  mov r14.xyz, r14.xyzx  // r14.x <- N.x; r14.y <- N.y; r14.z <- N.z

#line 210
  mov r11.xyz, -r11.xyzx  // r11.x <- L.x; r11.y <- L.y; r11.z <- L.z

#line 211
  mov r15.xyz, -r15.xyzx  // r15.x <- V.x; r15.y <- V.y; r15.z <- V.z

#line 212
  add r17.xyz, r11.xyzx, r15.xyzx
  dp3 r3.w, r17.xyzx, r17.xyzx
  rsq r3.w, r3.w
  mul r17.xyz, r3.wwww, r17.xyzx  // r17.x <- H.x; r17.y <- H.y; r17.z <- H.z

#line 214
  dp3 r3.w, r14.xyzx, r15.xyzx
  max r3.w, r3.w, l(0.000100)  // r3.w <- NdotV

#line 215
  dp3 r5.w, r14.xyzx, r11.xyzx
  max r5.w, r5.w, l(0.000100)  // r5.w <- NdotL

#line 216
  dp3 r6.w, r14.xyzx, r17.xyzx
  max r6.w, r6.w, l(0.000100)  // r6.w <- NdotH

#line 217
  dp3 r7.w, r15.xyzx, r17.xyzx
  max r7.w, r7.w, l(0.000100)  // r7.w <- VdotH

#line 219
  mul r11.xyz, r5.wwww, r16.xyzx  // r11.x <- irradiance.x; r11.y <- irradiance.y; r11.z <- irradiance.z

#line 222
  nop 
  mov r13.xyz, r13.xyzx
  mov r7.w, r7.w

#line 141
  mov r14.xyz, -r13.xyzx
  add r14.xyz, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mov r7.w, -r7.w
  add r7.w, r7.w, l(1.000000)
  max r7.w, r7.w, l(0.000000)
  min r7.w, r7.w, l(1.000000)
  mov r8.w, l(1.000000)
  mul r8.w, r7.w, r8.w
  mul r7.w, r7.w, r7.w
  mul r7.w, r7.w, r7.w
  mul r7.w, r7.w, r8.w
  mul r14.xyz, r7.wwww, r14.xyzx
  add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- <CalcFresnel return value>.x; r13.y <- <CalcFresnel return value>.y; r13.z <- <CalcFresnel return value>.z

#line 222
  mov r13.xyz, r13.xyzx  // r13.x <- F.x; r13.y <- F.y; r13.z <- F.z

#line 225
  nop 
  mov r12.xyz, r12.xyzx

#line 131
  div r12.xyz, r12.xyzx, r0.xxxx  // r12.x <- <DiffuseBRDF return value>.x; r12.y <- <DiffuseBRDF return value>.y; r12.z <- <DiffuseBRDF return value>.z

#line 225
  mov r14.xyz, -r13.xyzx
  add r14.xyz, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r12.xyz, r12.xyzx, r14.xyzx
  mul r12.xyz, r11.xyzx, r12.xyzx  // r12.x <- outDiffuse.x; r12.y <- outDiffuse.y; r12.z <- outDiffuse.z

#line 228
  nop 
  mov r3.w, r3.w
  mov r5.w, r5.w
  mov r6.w, r6.w
  mov r13.xyz, r13.xyzx
  mov r3.z, r3.z

#line 182
  nop 
  mov r6.w, r6.w
  mov r3.z, r3.z

#line 151
  mul r7.w, r3.z, r3.z  // r7.w <- a

#line 152
  mul r6.w, r6.w, r6.w
  mov r8.w, l(-1.000000)
  add r8.w, r7.w, r8.w
  mul r6.w, r6.w, r8.w
  add r6.w, r6.w, l(1.000000)  // r6.w <- b

#line 153
  mul r8.w, r0.x, r6.w
  mul r6.w, r6.w, r8.w
  div r6.w, r7.w, r6.w  // r6.w <- <CalcNormalDistributionFunction return value>

#line 182
  mov r6.w, r6.w  // r6.w <- D

#line 184
  nop 
  mov r5.w, r5.w
  mov r3.w, r3.w
  mov r3.z, r3.z

#line 164
  mul r3.z, r3.z, l(0.500000)  // r3.z <- r

#line 165
  mov r7.w, -r3.z
  add r7.w, r7.w, l(1.000000)
  mul r7.w, r5.w, r7.w
  add r7.w, r3.z, r7.w
  div r7.w, r5.w, r7.w  // r7.w <- shadowing

#line 166
  mov r8.w, -r3.z
  add r8.w, r8.w, l(1.000000)
  mul r8.w, r3.w, r8.w
  add r3.z, r3.z, r8.w
  div r3.z, r3.w, r3.z  // r3.z <- masking

#line 167
  mul r3.z, r3.z, r7.w  // r3.z <- <CalcGeometryFunction return value>

#line 184
  mov r3.z, r3.z  // r3.z <- G

#line 186
  mul r3.z, r3.z, r6.w
  mul r13.xyz, r13.xyzx, r3.zzzz
  mul r3.z, r3.w, r5.w
  mul r3.z, r3.z, l(4.000000)
  div r13.xyz, r13.xyzx, r3.zzzz  // r13.x <- <SpecularBRDF return value>.x; r13.y <- <SpecularBRDF return value>.y; r13.z <- <SpecularBRDF return value>.z

#line 228
  mul r11.xyz, r11.xyzx, r13.xyzx  // r11.x <- outSpecular.x; r11.y <- outSpecular.y; r11.z <- outSpecular.z

#line 208 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\gltf\gltf_model_forward_ps.hlsl"
  mov r12.xyz, r12.xyzx  // r12.x <- diffuse.x; r12.y <- diffuse.y; r12.z <- diffuse.z
  mov r11.xyz, r11.xyzx  // r11.x <- specular.x; r11.y <- specular.y; r11.z <- specular.z

#line 211
  mul r12.xyz, r1.wwww, r12.xyzx
  add r7.xyz, r7.xyzx, r12.xyzx

#line 212
  mul r11.xyz, r1.wwww, r11.xyzx
  add r8.xyz, r8.xyzx, r11.xyzx

#line 191
  iadd r0.w, r0.w, l(1)

#line 213
endloop 

#line 217
nop 
mov r0.xzw, r5.xxyz
mov r6.xyz, r6.xyzx
mov r1.w, r3.x
mov r4.yzw, r4.yyzw
mov r9.xyz, r2.xyzx
nop 
nop 

#line 292 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\shading_functions.hlsli"
mov r0.xzw, r0.xxzw  // r0.x <- N.x; r0.z <- N.y; r0.w <- N.z

#line 293
mov r10.xyz, -r6.xyzx  // r10.x <- V.x; r10.y <- V.y; r10.z <- V.z

#line 296
dp3 r3.z, r0.xzwx, r10.xyzx
max r3.z, r3.z, l(0.000100)  // r3.z <- NdotV

#line 297
nop 
mov r9.xyz, r9.xyzx
mov r3.z, r3.z
mov r1.w, r1.w

#line 277
mov r1.w, -r1.w
add r1.w, r1.w, l(1.000000)
max r10.xyz, r9.xyzx, r1.wwww
mov r11.xyz, -r9.xyzx
add r10.xyz, r10.xyzx, r11.xyzx
mov r1.w, -r3.z
add r1.w, r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(1.000000)
mov r3.z, l(1.000000)
mul r3.z, r1.w, r3.z
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r3.z
mul r10.xyz, r1.wwww, r10.xyzx
add r9.xyz, r9.xyzx, r10.xyzx  // r9.x <- <CalcFresnelRoughness return value>.x; r9.y <- <CalcFresnelRoughness return value>.y; r9.z <- <CalcFresnelRoughness return value>.z

#line 297
mov r9.xyz, -r9.xyzx
add r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r9.x <- kD.x; r9.y <- kD.y; r9.z <- kD.z

#line 299
nop 
mov r0.xzw, r0.xxzw

#line 250
sample_indexable(texturecube)(float,float,float,float) r0.xzw, r0.xzwx, t33.xwyz, s1
mov r0.xzw, r0.xxzw  // r0.x <- <SampleDiffuseIEM return value>.x; r0.z <- <SampleDiffuseIEM return value>.y; r0.w <- <SampleDiffuseIEM return value>.z

#line 299
mov r0.xzw, r0.xxzw  // r0.x <- irradiance.x; r0.z <- irradiance.y; r0.w <- irradiance.z

#line 300
mul r0.xzw, r0.xxzw, r4.yyzw
mul r0.xzw, r9.xxyz, r0.xxzw  // r0.x <- <DiffuseIBL return value>.x; r0.z <- <DiffuseIBL return value>.y; r0.w <- <DiffuseIBL return value>.z

#line 217 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\gltf\gltf_model_forward_ps.hlsl"
add r0.xzw, r0.xxzw, r7.xxyz  // r0.x <- total_diffuse.x; r0.z <- total_diffuse.y; r0.w <- total_diffuse.z

#line 218
nop 
mov r5.xyz, r5.xyzx
mov r6.xyz, r6.xyzx
mov r3.x, r3.x
mov r2.xyz, r2.xyzx
nop 
nop 
nop 

#line 315 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\shading_functions.hlsli"
mov r5.xyz, r5.xyzx  // r5.x <- N.x; r5.y <- N.y; r5.z <- N.z

#line 316
mov r4.yzw, -r6.xxyz  // r4.y <- V.x; r4.z <- V.y; r4.w <- V.z

#line 318
dp3 r1.w, r5.xyzx, r4.yzwy
max r3.y, r1.w, l(0.000100)  // r3.y <- NdotV

#line 319
mov r4.yzw, -r4.yyzw
dp3 r1.w, r4.yzwy, r5.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r5.xyz, r1.wwww, r5.xyzx
add r4.yzw, r4.yyzw, r5.xxyz
dp3 r1.w, r4.yzwy, r4.yzwy
rsq r1.w, r1.w
mul r4.yzw, r1.wwww, r4.yyzw  // r4.y <- R.x; r4.z <- R.y; r4.w <- R.z

#line 320
nop 
mov r4.yzw, r4.yyzw
mov r3.x, r3.x

#line 264
resinfo_indexable(texturecube)(float,float,float,float)_uint r1.w, l(0), t34.xyzw
mov r1.w, r1.w  // r1.w <- mip_maps

#line 265
mov r3.z, l(1)
ineg r3.z, r3.z
iadd r1.w, r1.w, r3.z
utof r1.w, r1.w
mul r1.w, r1.w, r3.x  // r1.w <- lod

#line 266
sample_l_indexable(texturecube)(float,float,float,float) r4.yzw, r4.yzwy, t34.wxyz, s1, r1.w
mov r4.yzw, r4.yyzw  // r4.y <- <SampleSpecularPMREM return value>.x; r4.z <- <SampleSpecularPMREM return value>.y; r4.w <- <SampleSpecularPMREM return value>.z

#line 320
mov r4.yzw, r4.yyzw  // r4.y <- specular_light.x; r4.z <- specular_light.y; r4.w <- specular_light.z

#line 322
max r3.xy, r3.yxyy, l(0.000000, 0.000000, 0.000000, 0.000000)
min r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r3.x <- brdf_sample_point.x; r3.y <- brdf_sample_point.y

#line 323
nop 
mov r3.xy, r3.xyxx

#line 239
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t35.xyzw, s1
mov r3.xy, r3.xyxx  // r3.x <- <SampleLutGGX return value>.x; r3.y <- <SampleLutGGX return value>.y

#line 323
mov r3.xy, r3.xyxx  // r3.x <- env_brdf.x; r3.y <- env_brdf.y

#line 324
mul r2.xyz, r2.xyzx, r3.xxxx
add r2.xyz, r3.yyyy, r2.xyzx
mul r2.xyz, r2.xyzx, r4.yzwy  // r2.x <- <SpecularIBL return value>.x; r2.y <- <SpecularIBL return value>.y; r2.z <- <SpecularIBL return value>.z

#line 218 "C:\Users\2230151\Desktop\プログラミング\描画エンジン\3dgame\HLSL\gltf\gltf_model_forward_ps.hlsl"
add r2.xyz, r2.xyzx, r8.xyzx  // r2.x <- total_specular.x; r2.y <- total_specular.y; r2.z <- total_specular.z

#line 221
mul r3.xyz, r0.yyyy, r0.xzwx
mov r4.yzw, -r0.xxzw
add r3.xyz, r3.xyzx, r4.yzwy
mul r3.xyz, r3.xyzx, r4.xxxx
add r0.xzw, r0.xxzw, r3.xxyz

#line 222
mul r3.xyz, r0.yyyy, r2.xyzx
mov r4.yzw, -r2.xxyz
add r3.xyz, r3.xyzx, r4.yzwy
mul r3.xyz, r3.xyzx, r4.xxxx
add r2.xyz, r2.xyzx, r3.xyzx

#line 225
add r0.xyz, r0.xzwx, r2.xyzx
add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 226
mov r1.xyz, l(1.000000,1.000000,1.000000,0)
mul o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, r2.w
ret 
// Approximately 603 instruction slots used
