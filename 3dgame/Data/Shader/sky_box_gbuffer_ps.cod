//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   float4 options;                    // Offset:    0 Size:    16 [unused]
//   float4 z_buffer_parameteres;       // Offset:   16 Size:    16
//   float4 camera_position;            // Offset:   32 Size:    16
//   float4 camera_direction;           // Offset:   48 Size:    16 [unused]
//   float4 camera_clip_distance;       // Offset:   64 Size:    16 [unused]
//   float4 viewport_size;              // Offset:   80 Size:    16 [unused]
//   row_major float4x4 view_transform; // Offset:   96 Size:    64 [unused]
//   row_major float4x4 projection_transform;// Offset:  160 Size:    64 [unused]
//   row_major float4x4 view_projection_transform;// Offset:  224 Size:    64
//   row_major float4x4 inverse_view_transform;// Offset:  288 Size:    64 [unused]
//   row_major float4x4 inverse_projection_transform;// Offset:  352 Size:    64 [unused]
//   row_major float4x4 inverse_view_projection_transform;// Offset:  416 Size:    64 [unused]
//   row_major float4x4 previous_view_projection_transform;// Offset:  480 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerstate                      sampler      NA          NA             s0      1 
// specular_pmrem                    texture  float4        cube             t0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyz 
// WORLD_POSITION           0   xyzw        2     NONE   float   xyz 
// CLIP_POSITION            0   xyzw        3     NONE   float   xy w
// CLIP_POSITION            1   xyzw        4     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
// SV_TARGET                3   xyzw        3   TARGET   float   xyzw
// SV_TARGET                4   x           4   TARGET   float   x   
// SV_TARGET                5   xyzw        5   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[18], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyw
dcl_input_ps linear v4.xyw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.x
dcl_output o5.xyzw
dcl_temps 10
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.world_position.x; v2.y <- pin.world_position.y; v2.z <- pin.world_position.z; v2.w <- pin.world_position.w; 
//   v3.x <- pin.current_clip_position.x; v3.y <- pin.current_clip_position.y; v3.z <- pin.current_clip_position.z; v3.w <- pin.current_clip_position.w; 
//   v4.x <- pin.previous_clip_position.x; v4.y <- pin.previous_clip_position.y; v4.z <- pin.previous_clip_position.z; v4.w <- pin.previous_clip_position.w; 
//   o5.x <- <main return value>.velocity.x; o5.y <- <main return value>.velocity.y; o5.z <- <main return value>.velocity.z; o5.w <- <main return value>.velocity.w; 
//   o4.x <- <main return value>.depth; 
//   o3.x <- <main return value>.parameter.x; o3.y <- <main return value>.parameter.y; o3.z <- <main return value>.parameter.z; o3.w <- <main return value>.parameter.w; 
//   o2.x <- <main return value>.normal.x; o2.y <- <main return value>.normal.y; o2.z <- <main return value>.normal.z; o2.w <- <main return value>.normal.w; 
//   o1.x <- <main return value>.emissive_color.x; o1.y <- <main return value>.emissive_color.y; o1.z <- <main return value>.emissive_color.z; o1.w <- <main return value>.emissive_color.w; 
//   o0.x <- <main return value>.base_color.x; o0.y <- <main return value>.base_color.y; o0.z <- <main return value>.base_color.z; o0.w <- <main return value>.base_color.w
//
#line 5 "D:\ライブラリ\3dgame\HLSL\deferred\gbuffer.hlsli"
mov r0.x, l(0)  // r0.x <- shading_model_unlit

#line 9 "D:\ライブラリ\3dgame\HLSL\sky_box_gbuffer_ps.hlsl"
mov r0.yzw, -cb1[2].xxyz
add r0.yzw, r0.yyzw, v2.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx  // r0.y <- E.x; r0.z <- E.y; r0.w <- E.z

#line 12
itof r1.x, l(0)
sample_l_indexable(texturecube)(float,float,float,float) r0.yzw, r0.yzwy, t0.wxyz, s0, r1.x
mul r1.xyz, r0.yzwy, v1.xyzx  // r1.x <- base_color.x; r1.y <- base_color.y; r1.z <- base_color.z

#line 15
itof r2.xyzw, l(0, 0, 0, 0)  // r2.x <- data.occlusion_factor; r2.y <- data.roughness; r2.z <- data.metalness; r2.w <- data.occlusion_strength
itof r3.xyz, l(0, 0, 0, 0)  // r3.x <- data.base_color.x; r3.y <- data.base_color.y; r3.z <- data.base_color.z
itof r4.xyz, l(0, 0, 0, 0)  // r4.x <- data.w_normal.x; r4.y <- data.w_normal.y; r4.z <- data.w_normal.z

#line 16
mov r0.x, r0.x  // r0.x <- data.shading_model

#line 17
mov r1.xyz, r1.xyzx  // r1.x <- data.emissive_color.x; r1.y <- data.emissive_color.y; r1.z <- data.emissive_color.z

#line 18
mov r5.xyz, v2.xyzx  // r5.x <- data.w_position.x; r5.y <- data.w_position.y; r5.z <- data.w_position.z

#line 19
nop 
mov r0.yzw, v3.xxyw
mov r6.xyz, v4.xywx

#line 50 "D:\ライブラリ\3dgame\HLSL\deferred\gbuffer.hlsli"
div r0.yz, r0.yyzy, r0.wwww

#line 51
div r6.xy, r6.xyxx, r6.zzzz

#line 52
mul r0.yz, r0.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000)
add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)  // r0.y <- current_clip_position.x; r0.z <- current_clip_position.y

#line 53
mul r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r6.x <- previous_clip_position.x; r6.y <- previous_clip_position.y

#line 54
mov r6.xy, -r6.xyxx
add r6.xy, r0.yzyy, r6.xyxx  // r6.x <- <calculate_uvspace_velocity return value>.x; r6.y <- <calculate_uvspace_velocity return value>.y

#line 19 "D:\ライブラリ\3dgame\HLSL\sky_box_gbuffer_ps.hlsl"
mov r6.xy, r6.xyxx  // r6.x <- data.velocity.x; r6.y <- data.velocity.y

#line 20
nop 
mov r2.xyzw, r2.xyzw
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r4.xyz, r4.xyzx
mov r5.xyz, r5.xyzx
mov r0.x, r0.x
mov r6.xy, r6.xyxx
mov r7.x, cb1[14].z
mov r8.x, cb1[14].w
mov r7.y, cb1[15].z
mov r8.y, cb1[15].w
mov r9.xy, cb1[16].zwzz
mov r9.zw, cb1[17].zzzw
mov r0.yz, cb1[1].xxyx

#line 73 "D:\ライブラリ\3dgame\HLSL\deferred\gbuffer.hlsli"
mov r3.xyz, r3.xyzx  // r3.x <- ret.base_color.x; r3.y <- ret.base_color.y; r3.z <- ret.base_color.z

#line 74
itof r0.x, r0.x
div r3.w, r0.x, l(32.000000)  // r3.w <- ret.base_color.w

#line 75
mov r1.xyz, r1.xyzx  // r1.x <- ret.emissive_color.x; r1.y <- ret.emissive_color.y; r1.z <- ret.emissive_color.z

#line 76
itof r1.w, l(1)  // r1.w <- ret.emissive_color.w

#line 77
mov r4.xyz, r4.xyzx  // r4.x <- ret.normal.x; r4.y <- ret.normal.y; r4.z <- ret.normal.z

#line 78
itof r4.w, l(1)  // r4.w <- ret.normal.w

#line 79
mov r2.x, r2.x  // r2.x <- ret.parameter.x

#line 80
mov r2.y, r2.y  // r2.y <- ret.parameter.y

#line 81
mov r2.z, r2.z  // r2.z <- ret.parameter.z

#line 82
mov r2.w, r2.w  // r2.w <- ret.parameter.w

#line 83
mov r5.w, l(1.000000)
mov r7.zw, r9.xxxz
dp4 r0.x, r5.xyzw, r7.xyzw  // r0.x <- position.z
mov r8.zw, r9.yyyw
dp4 r0.w, r5.xyzw, r8.xyzw  // r0.w <- position.w

#line 84
nop 
div r0.x, r0.x, r0.w
mov r0.yz, r0.yyzy

#line 60
mul r0.x, r0.x, r0.y
add r0.x, r0.z, r0.x
div r0.x, l(1.000000), r0.x  // r0.x <- <convert_projection_depth_to_linear_depth return value>

#line 84
mov r0.x, r0.x  // r0.x <- ret.depth

#line 86
mov r6.x, r6.x  // r6.x <- ret.velocity.x

#line 87
mov r6.y, r6.y  // r6.y <- ret.velocity.y

#line 88
itof r6.z, l(1)  // r6.z <- ret.velocity.z

#line 89
itof r6.w, l(1)  // r6.w <- ret.velocity.w

#line 90
mov r3.xyz, r3.xyzx  // r3.x <- <EncodeGBuffer return value>.base_color.x; r3.y <- <EncodeGBuffer return value>.base_color.y; r3.z <- <EncodeGBuffer return value>.base_color.z
mov r3.w, r3.w  // r3.w <- <EncodeGBuffer return value>.base_color.w
mov r1.xyz, r1.xyzx  // r1.x <- <EncodeGBuffer return value>.emissive_color.x; r1.y <- <EncodeGBuffer return value>.emissive_color.y; r1.z <- <EncodeGBuffer return value>.emissive_color.z
mov r1.w, r1.w  // r1.w <- <EncodeGBuffer return value>.emissive_color.w
mov r4.xyz, r4.xyzx  // r4.x <- <EncodeGBuffer return value>.normal.x; r4.y <- <EncodeGBuffer return value>.normal.y; r4.z <- <EncodeGBuffer return value>.normal.z
mov r4.w, r4.w  // r4.w <- <EncodeGBuffer return value>.normal.w
mov r2.x, r2.x  // r2.x <- <EncodeGBuffer return value>.parameter.x
mov r2.y, r2.y  // r2.y <- <EncodeGBuffer return value>.parameter.y
mov r2.z, r2.z  // r2.z <- <EncodeGBuffer return value>.parameter.z
mov r2.w, r2.w  // r2.w <- <EncodeGBuffer return value>.parameter.w
mov r6.x, r6.x  // r6.x <- <EncodeGBuffer return value>.velocity.x
mov r6.y, r6.y  // r6.y <- <EncodeGBuffer return value>.velocity.y
mov r6.z, r6.z  // r6.z <- <EncodeGBuffer return value>.velocity.z
mov r6.w, r6.w  // r6.w <- <EncodeGBuffer return value>.velocity.w
mov r0.x, r0.x  // r0.x <- <EncodeGBuffer return value>.depth

#line 20 "D:\ライブラリ\3dgame\HLSL\sky_box_gbuffer_ps.hlsl"
mov o0.xyzw, r3.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xyzw, r4.xyzw
mov o3.xyzw, r2.xyzw
mov o5.xyzw, r6.xyzw
mov o4.x, r0.x
ret 
// Approximately 91 instruction slots used
